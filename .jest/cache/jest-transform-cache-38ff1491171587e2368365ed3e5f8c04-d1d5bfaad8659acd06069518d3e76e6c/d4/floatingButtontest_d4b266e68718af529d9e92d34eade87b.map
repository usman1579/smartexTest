{"version":3,"names":["describe","it","render","getByTestId","expect","toBeTruthy","data","id","name","description","date","Date","navigation","navigate","jest","fn","item","screen","button","fireEvent","press","toHaveBeenCalledWith","onPressAddData","title","check","goBack","dispatch","beforeEach","addDataToList","chek","uuid","v4","toHaveBeenCalled"],"sources":["floatingButton.test.js"],"sourcesContent":["import 'react-native';\nimport React from 'react';\nimport {render, screen, fireEvent} from '@testing-library/react-native';\nimport FloatingButton from '../FloatingButton';\nimport {shallow} from 'enzyme';\nimport {addDataToList} from '../../../redux/reducer';\ndescribe('Floating Button', () => {\n  it('renders correctly on Main Screen', () => {\n    const {getByTestId} = render(<FloatingButton />);\n    expect(getByTestId('add')).toBeTruthy();\n  });\n\n  it('calls navigation.navigate when pressed', () => {\n    const data = {\n      id: 1,\n      name: 'Test',\n      description: 'here is description',\n      date: new Date(),\n    };\n    const navigation = {navigate: jest.fn()};\n    const {getByTestId} = render(\n      <FloatingButton\n        navigation={navigation}\n        onPress={() =>\n          navigation.navigate('Detail', {item: data, screen: 'Add Item'})\n        }\n      />,\n    );\n    const button = getByTestId('floating-button');\n    fireEvent.press(button);\n    expect(navigation.navigate).toHaveBeenCalledWith('Detail', {\n      item: data,\n      screen: 'Add Item',\n    });\n  });\n\n  it('renders correctly on Detail Screen with Tick Icon', () => {\n    const {getByTestId} = render(<FloatingButton type={'done'} />);\n    expect(getByTestId('checkmark-outline')).toBeTruthy();\n  });\n\n\n  it('calls onPressAddData when pressed and dispatches addDataToList action', () => {\n    let onPressAddData\n    const title = 'Test Title';\n    const description = 'Test Description';\n    const date = new Date();\n    const item = {check: true, id: '1'};\n    const navigation = {goBack: jest.fn()};\n    const dispatch = jest.fn();\n\n    beforeEach(() => {\n      onPressAddData = jest.fn(() => {\n        dispatch(addDataToList({\n          title: title,\n          description: description,\n          date: date,\n          check: item.chek || false,\n          id: item?.id || uuid.v4(),\n        }));\n        navigation.goBack();\n      });\n    });\n\n    const {getByTestId} = render(\n      <FloatingButton\n        navigation={navigation}\n        onPress={onPressAddData}\n        type=\"done\"\n        title={title}\n        description={description}\n        date={date}\n        item={item}\n        dispatch={dispatch}\n      />,\n    );\n    const button = getByTestId('floating-button');\n    fireEvent.press(button);\n    // expect(onPressAddData).toHaveBeenCalled()\n    expect(dispatch).toHaveBeenCalledWith(\n      addDataToList({\n        title: title,\n        description: description,\n        date: date,\n        check: item.chek || false,\n        id: item?.id || uuid.v4(),\n      }),\n    );\n    expect(navigation.goBack).toHaveBeenCalled();\n  });\n});\n\n// import {render, fireEvent} from 'react-native-testing-library';\n// import {FloatingButton} from './FloatingButton';\n// import {addDataToList} from './actions';\n\n// describe('FloatingButton', () => {\n//   it('calls onPressAddData when pressed and dispatches addDataToList action', () => {\n//     const title = 'Test Title';\n//     const description = 'Test Description';\n//     const date = new Date();\n//     const item = {check: true, id: '1'};\n//     const navigation = {goBack: jest.fn()};\n//     const dispatch = jest.fn();\n//     const {getByTestId} = render(\n//       <FloatingButton\n//         navigation={navigation}\n//         onPress={onPressAddData}\n//         type=\"done\"\n//         title={title}\n//         description={description}\n//         date={date}\n//         item={item}\n//         dispatch={dispatch}\n//       />,\n//     );\n//     const button = getByTestId('floating-button');\n//     fireEvent.press(button);\n//     expect(dispatch).toHaveBeenCalledWith(\n//       addDataToList({\n//         title: title,\n//         description: description,\n//         date: date,\n//         check: item.chek || false,\n//         id: item?.id || uuid.v4(),\n//       }),\n//     );\n//     expect(navigation.goBack).toHaveBeenCalled();\n//   });\n// });\n"],"mappings":"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"}