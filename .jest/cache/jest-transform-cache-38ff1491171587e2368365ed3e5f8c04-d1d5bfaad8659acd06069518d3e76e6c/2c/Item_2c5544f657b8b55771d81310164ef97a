ef9de757d6a1d2e355c7e63be7b84601
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Item = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _checkbox = _interopRequireDefault(require("@react-native-community/checkbox"));
var _jsxRuntime = require("react/jsx-runtime");
var Item = function Item(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.itemContainer,
    testID: props.testID,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.checkBox,
      children: (0, _jsxRuntime.jsx)(_checkbox.default, {
        disabled: false,
        value: props.CheckBox,
        onValueChange: props.onValueChange
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      testID: props.testID,
      onPress: props.onPressItem,
      style: {
        flex: 5,
        justifyContent: 'center'
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textTitle,
        children: props.title
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.description
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.date
      })]
    })]
  });
};
exports.Item = Item;
var styles = _reactNative.StyleSheet.create({
  text1: {
    fontSize: 12,
    fontWeight: '500',
    color: 'grey'
  },
  textTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'black'
  },
  itemContainer: {
    height: 80,
    width: '100%',
    flexDirection: 'row',
    marginBottom: 5
  },
  checkBox: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJdGVtIiwicHJvcHMiLCJzdHlsZXMiLCJpdGVtQ29udGFpbmVyIiwidGVzdElEIiwiY2hlY2tCb3giLCJDaGVja0JveCIsIm9uVmFsdWVDaGFuZ2UiLCJvblByZXNzSXRlbSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsInRleHRUaXRsZSIsInRpdGxlIiwidGV4dDEiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJoZWlnaHQiLCJ3aWR0aCIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5Cb3R0b20iLCJhbGlnbkl0ZW1zIl0sInNvdXJjZXMiOlsiSXRlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtTdHlsZVNoZWV0LCBUZXh0LCBWaWV3LCBUb3VjaGFibGVPcGFjaXR5fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IENoZWNrQm94IGZyb20gJ0ByZWFjdC1uYXRpdmUtY29tbXVuaXR5L2NoZWNrYm94JztcblxuZXhwb3J0IGNvbnN0IEl0ZW0gPSBwcm9wcyA9PiAoXG4gIDxWaWV3IHN0eWxlPXtzdHlsZXMuaXRlbUNvbnRhaW5lcn0gIHRlc3RJRD17cHJvcHMudGVzdElEfT5cbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNoZWNrQm94fT5cbiAgICAgIDxDaGVja0JveFxuICAgICAgICBkaXNhYmxlZD17ZmFsc2V9XG4gICAgICAgIHZhbHVlPXtwcm9wcy5DaGVja0JveH1cbiAgICAgICAgb25WYWx1ZUNoYW5nZT17cHJvcHMub25WYWx1ZUNoYW5nZX1cbiAgICAgIC8+XG4gICAgPC9WaWV3PlxuXG4gICAgPFRvdWNoYWJsZU9wYWNpdHlcbiAgICAgIHRlc3RJRD17cHJvcHMudGVzdElEfVxuICAgICAgb25QcmVzcz17cHJvcHMub25QcmVzc0l0ZW19XG4gICAgICBzdHlsZT17e2ZsZXg6IDUsIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJ319PlxuICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy50ZXh0VGl0bGV9Pntwcm9wcy50aXRsZX08L1RleHQ+XG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGVzY3JpcHRpb259PC9UZXh0PlxuICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy50ZXh0MX0+e3Byb3BzLmRhdGV9PC9UZXh0PlxuICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cbiAgPC9WaWV3PlxuKTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0ZXh0MToge1xuICAgIGZvbnRTaXplOiAxMixcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICBjb2xvcjogJ2dyZXknLFxuICB9LFxuICB0ZXh0VGl0bGU6IHtcbiAgICBmb250U2l6ZTogMTYsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGNvbG9yOiAnYmxhY2snLFxuICB9LFxuICBpdGVtQ29udGFpbmVyOiB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIG1hcmdpbkJvdHRvbTogNSxcbiAgfSxcbiAgY2hlY2tCb3g6IHtcbiAgICBmbGV4OiAxLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUF3RDtBQUVqRCxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBSSxDQUFHQyxLQUFLO0VBQUEsT0FDdkIsc0JBQUMsaUJBQUk7SUFBQyxLQUFLLEVBQUVDLE1BQU0sQ0FBQ0MsYUFBYztJQUFFLE1BQU0sRUFBRUYsS0FBSyxDQUFDRyxNQUFPO0lBQUEsV0FDdkQscUJBQUMsaUJBQUk7TUFBQyxLQUFLLEVBQUVGLE1BQU0sQ0FBQ0csUUFBUztNQUFBLFVBQzNCLHFCQUFDLGlCQUFRO1FBQ1AsUUFBUSxFQUFFLEtBQU07UUFDaEIsS0FBSyxFQUFFSixLQUFLLENBQUNLLFFBQVM7UUFDdEIsYUFBYSxFQUFFTCxLQUFLLENBQUNNO01BQWM7SUFDbkMsRUFDRyxFQUVQLHNCQUFDLDZCQUFnQjtNQUNmLE1BQU0sRUFBRU4sS0FBSyxDQUFDRyxNQUFPO01BQ3JCLE9BQU8sRUFBRUgsS0FBSyxDQUFDTyxXQUFZO01BQzNCLEtBQUssRUFBRTtRQUFDQyxJQUFJLEVBQUUsQ0FBQztRQUFFQyxjQUFjLEVBQUU7TUFBUSxDQUFFO01BQUEsV0FDM0MscUJBQUMsaUJBQUk7UUFBQyxLQUFLLEVBQUVSLE1BQU0sQ0FBQ1MsU0FBVTtRQUFBLFVBQUVWLEtBQUssQ0FBQ1c7TUFBSyxFQUFRLEVBQ25ELHFCQUFDLGlCQUFJO1FBQUMsS0FBSyxFQUFFVixNQUFNLENBQUNXLEtBQU07UUFBQSxVQUFFWixLQUFLLENBQUNhO01BQVcsRUFBUSxFQUNyRCxxQkFBQyxpQkFBSTtRQUFDLEtBQUssRUFBRVosTUFBTSxDQUFDVyxLQUFNO1FBQUEsVUFBRVosS0FBSyxDQUFDYztNQUFJLEVBQVE7SUFBQSxFQUM3QjtFQUFBLEVBQ2Q7QUFBQSxDQUNSO0FBQUM7QUFFRixJQUFNYixNQUFNLEdBQUdjLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQkosS0FBSyxFQUFFO0lBQ0xLLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RULFNBQVMsRUFBRTtJQUNUTyxRQUFRLEVBQUUsRUFBRTtJQUNaQyxVQUFVLEVBQUUsTUFBTTtJQUNsQkMsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNEakIsYUFBYSxFQUFFO0lBQ2JrQixNQUFNLEVBQUUsRUFBRTtJQUNWQyxLQUFLLEVBQUUsTUFBTTtJQUNiQyxhQUFhLEVBQUUsS0FBSztJQUNwQkMsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDRG5CLFFBQVEsRUFBRTtJQUNSSSxJQUFJLEVBQUUsQ0FBQztJQUNQQyxjQUFjLEVBQUUsUUFBUTtJQUN4QmUsVUFBVSxFQUFFO0VBQ2Q7QUFDRixDQUFDLENBQUMifQ==