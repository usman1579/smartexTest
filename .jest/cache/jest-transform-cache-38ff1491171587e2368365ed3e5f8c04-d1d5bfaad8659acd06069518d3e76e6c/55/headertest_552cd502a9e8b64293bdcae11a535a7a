5237f7532c694e081b8b7d326d9f53f0
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _reactNative2 = require("@testing-library/react-native");
var _Header = _interopRequireDefault(require("../Header"));
var _enzyme = require("enzyme");
var _jsxRuntime = require("react/jsx-runtime");
describe('Header', function () {
  it('renders correctly on Menu Header', function () {
    var _render = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Lista de tarefas",
        detail: false
      })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;
    expect(getByText('Lista de tarefas')).toBeTruthy();
    expect(getByTestId('menu-icon')).toBeTruthy();
  });
  it('Header render Add Item', function () {
    var _render2 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Add Item",
        detail: true,
        id: null
      })),
      getByText = _render2.getByText,
      getByTestId = _render2.getByTestId;
    expect(getByText('Add Item')).toBeTruthy();
    expect(getByTestId('chevron-back-outline')).toBeTruthy();
  });
  it('Header render Edit Item', function () {
    var _render3 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Edit Item",
        detail: true,
        id: '123'
      })),
      getByText = _render3.getByText,
      getByTestId = _render3.getByTestId;
    expect(getByText('Edit Item')).toBeTruthy();
    expect(getByTestId('chevron-back-outline')).toBeTruthy();
    expect(getByTestId('trash-outline')).toBeTruthy();
  });
  it('calls onPress prop when menu icon is pressed', function () {
    var onPress = jest.fn();
    var _render4 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test Title",
        onPress: onPress
      })),
      getByTestId = _render4.getByTestId;
    _reactNative2.fireEvent.press(getByTestId('menu-icon'));
    expect(onPress).toHaveBeenCalled();
  });
  it('calls onPressDelete prop when delete icon is pressed', function () {
    var onPressDelete = jest.fn();
    var _render5 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test Title",
        id: '123',
        onPressDelete: onPressDelete
      })),
      getByTestId = _render5.getByTestId;
    _reactNative2.fireEvent.press(getByTestId('trash-outline'));
    expect(onPressDelete).toHaveBeenCalled();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwicmVuZGVyIiwiZ2V0QnlUZXh0IiwiZ2V0QnlUZXN0SWQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5Iiwib25QcmVzcyIsImplc3QiLCJmbiIsImZpcmVFdmVudCIsInByZXNzIiwidG9IYXZlQmVlbkNhbGxlZCIsIm9uUHJlc3NEZWxldGUiXSwic291cmNlcyI6WyJoZWFkZXIudGVzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHtyZW5kZXIsIHNjcmVlbiwgZmlyZUV2ZW50fSBmcm9tICdAdGVzdGluZy1saWJyYXJ5L3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL0hlYWRlcic7XG5pbXBvcnQge3NoYWxsb3d9IGZyb20gJ2VuenltZSc7XG5cbmRlc2NyaWJlKCdIZWFkZXInLCAoKSA9PiB7XG5cbiAgICBpdCgncmVuZGVycyBjb3JyZWN0bHkgb24gTWVudSBIZWFkZXInLCAoKSA9PiB7XG4gICAgICBjb25zdCB7Z2V0QnlUZXh0LCBnZXRCeVRlc3RJZH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIkxpc3RhIGRlIHRhcmVmYXNcIiAgZGV0YWlsPXtmYWxzZX0gLz4pO1xuICAgICAgZXhwZWN0KGdldEJ5VGV4dCgnTGlzdGEgZGUgdGFyZWZhcycpKS50b0JlVHJ1dGh5KCk7XG4gICAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ21lbnUtaWNvbicpKS50b0JlVHJ1dGh5KCk7XG4gICAgfSk7XG5cbiAgICBpdCggJ0hlYWRlciByZW5kZXIgQWRkIEl0ZW0nICwgKCkgPT4ge1xuICAgICAgICBjb25zdCB7Z2V0QnlUZXh0LCBnZXRCeVRlc3RJZH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIkFkZCBJdGVtXCIgIGRldGFpbD17dHJ1ZX0gaWQ9e251bGx9IC8+KTtcbiAgICAgICAgZXhwZWN0KGdldEJ5VGV4dCgnQWRkIEl0ZW0nKSkudG9CZVRydXRoeSgpO1xuICAgICAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ2NoZXZyb24tYmFjay1vdXRsaW5lJykpLnRvQmVUcnV0aHkoKTtcbiAgICB9KVxuXG4gICAgaXQoICdIZWFkZXIgcmVuZGVyIEVkaXQgSXRlbScgLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHtnZXRCeVRleHQsIGdldEJ5VGVzdElkfSA9IHJlbmRlcig8SGVhZGVyIHRpdGxlPVwiRWRpdCBJdGVtXCIgIGRldGFpbD17dHJ1ZX0gaWQ9eycxMjMnfSAvPik7XG4gICAgICBcbiAgICAgICAgZXhwZWN0KGdldEJ5VGV4dCgnRWRpdCBJdGVtJykpLnRvQmVUcnV0aHkoKTtcbiAgICAgICAgZXhwZWN0KGdldEJ5VGVzdElkKCdjaGV2cm9uLWJhY2stb3V0bGluZScpKS50b0JlVHJ1dGh5KCk7XG4gICAgICAgIGV4cGVjdChnZXRCeVRlc3RJZCgndHJhc2gtb3V0bGluZScpKS50b0JlVHJ1dGh5KCk7XG5cbiAgICB9KVxuXG4gICAgaXQoJ2NhbGxzIG9uUHJlc3MgcHJvcCB3aGVuIG1lbnUgaWNvbiBpcyBwcmVzc2VkJywgKCkgPT4ge1xuICAgICAgY29uc3Qgb25QcmVzcyA9IGplc3QuZm4oKTtcbiAgICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPEhlYWRlciB0aXRsZT1cIlRlc3QgVGl0bGVcIiBvblByZXNzPXtvblByZXNzfSAvPik7XG4gICAgICBmaXJlRXZlbnQucHJlc3MoZ2V0QnlUZXN0SWQoJ21lbnUtaWNvbicpKTtcbiAgICAgIGV4cGVjdChvblByZXNzKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgfSk7XG5cbiAgICBpdCgnY2FsbHMgb25QcmVzc0RlbGV0ZSBwcm9wIHdoZW4gZGVsZXRlIGljb24gaXMgcHJlc3NlZCcsICgpID0+IHtcbiAgICAgIGNvbnN0IG9uUHJlc3NEZWxldGUgPSBqZXN0LmZuKCk7XG4gICAgICBjb25zdCB7Z2V0QnlUZXN0SWR9ID0gcmVuZGVyKFxuICAgICAgICA8SGVhZGVyIHRpdGxlPVwiVGVzdCBUaXRsZVwiIGlkPXsnMTIzJ30gb25QcmVzc0RlbGV0ZT17b25QcmVzc0RlbGV0ZX0gLz4sXG4gICAgICApO1xuICAgICAgZmlyZUV2ZW50LnByZXNzKGdldEJ5VGVzdElkKCd0cmFzaC1vdXRsaW5lJykpO1xuICAgICAgZXhwZWN0KG9uUHJlc3NEZWxldGUpLnRvSGF2ZUJlZW5DYWxsZWQoKTtcbiAgICB9KTtcblxuICAvLyAgIGl0KCdyZW5kZXJzIHRoZSBjb3JyZWN0IGljb24gd2hlbiBkZXRhaWwgcHJvcCBpcyB0cnVlJywgKCkgPT4ge1xuICAvLyAgICAgY29uc3Qge2dldEJ5VGVzdElkfSA9IHJlbmRlcihcbiAgLy8gICAgICAgPEhlYWRlciB0aXRsZT1cIlRlc3QgVGl0bGVcIiBkZXRhaWw9e3RydWV9IC8+LFxuICAvLyAgICAgKTtcbiAgLy8gICAgIGV4cGVjdChnZXRCeVRlc3RJZCgnbWVudS1pY29uJykucHJvcHMubmFtZSkudG9CZSgnY2hldnJvbi1iYWNrLW91dGxpbmUnKTtcbiAgLy8gICB9KTtcbn0pO1xuXG4vLyBpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuLy8gaW1wb3J0IHsgc2hhbGxvdyB9IGZyb20gJ2VuenltZSc7XG4vLyBpbXBvcnQgSGVhZGVyIGZyb20gJy4vSGVhZGVyJztcblxuLy8gZGVzY3JpYmUoJ0hlYWRlciBjb21wb25lbnQnLCAoKSA9PiB7XG4vLyAgIGxldCB3cmFwcGVyO1xuLy8gICBsZXQgb25QcmVzc01vY2sgPSBqZXN0LmZuKCk7XG4vLyAgIGxldCBvblByZXNzRGVsZXRlTW9jayA9IGplc3QuZm4oKTtcblxuLy8gICBiZWZvcmVFYWNoKCgpID0+IHtcbi8vICAgICB3cmFwcGVyID0gc2hhbGxvdyhcbi8vICAgICAgIDxIZWFkZXJcbi8vICAgICAgICAgdGl0bGU9XCJUZXN0IFRpdGxlXCJcbi8vICAgICAgICAgb25QcmVzcz17b25QcmVzc01vY2t9XG4vLyAgICAgICAgIG9uUHJlc3NEZWxldGU9e29uUHJlc3NEZWxldGVNb2NrfVxuLy8gICAgICAgLz5cbi8vICAgICApO1xuLy8gICB9KTtcblxuLy8gICBpdCgncmVuZGVycyB0aGUgbWVudSBpY29uIGNvcnJlY3RseScsICgpID0+IHtcbi8vICAgICBleHBlY3Qod3JhcHBlci5maW5kKCdbdGVzdElEPVwibWVudS1pY29uXCJdJykuZXhpc3RzKCkpLnRvQmUodHJ1ZSk7XG4vLyAgIH0pO1xuXG4vLyAgIGl0KCd0cmlnZ2VycyB0aGUgb25QcmVzcyBmdW5jdGlvbiB3aGVuIG1lbnUgaWNvbiBpcyBwcmVzc2VkJywgKCkgPT4ge1xuLy8gICAgIHdyYXBwZXIuZmluZCgnW3Rlc3RJRD1cIm1lbnUtaWNvblwiXScpLnNpbXVsYXRlKCdwcmVzcycpO1xuLy8gICAgIGV4cGVjdChvblByZXNzTW9jaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuLy8gICB9KTtcblxuLy8gICBpdCgncmVuZGVycyB0aGUgYmFjayBhcnJvdyBpY29uIGNvcnJlY3RseSB3aGVuIGRldGFpbCBwcm9wIGlzIHRydWUnLCAoKSA9PiB7XG4vLyAgICAgd3JhcHBlci5zZXRQcm9wcyh7IGRldGFpbDogdHJ1ZSB9KTtcbi8vICAgICBleHBlY3Qod3JhcHBlci5maW5kKCdbbmFtZT1cImNoZXZyb24tYmFjay1vdXRsaW5lXCJdJykuZXhpc3RzKCkpLnRvQmUodHJ1ZSk7XG4vLyAgIH0pO1xuXG4vLyAgIGl0KCdyZW5kZXJzIHRoZSB0cmFzaCBjYW4gaWNvbiBjb3JyZWN0bHkgd2hlbiBpZCBwcm9wIGlzIG5vdCBudWxsJywgKCkgPT4ge1xuLy8gICAgIHdyYXBwZXIuc2V0UHJvcHMoeyBpZDogJzEyMycgfSk7XG4vLyAgICAgZXhwZWN0KHdyYXBwZXIuZmluZCgnW25hbWU9XCJ0cmFzaC1vdXRsaW5lXCJdJykuZXhpc3RzKCkpLnRvQmUodHJ1ZSk7XG4vLyAgIH0pO1xuXG4vLyAgIGl0KCd0cmlnZ2VycyB0aGUgb25QcmVzc0RlbGV0ZSBmdW5jdGlvbiB3aGVuIHRyYXNoIGNhbiBpY29uIGlzIHByZXNzZWQnLCAoKSA9PiB7XG4vLyAgICAgd3JhcHBlci5zZXRQcm9wcyh7IGlkOiAnMTIzJyB9KTtcbi8vICAgICB3cmFwcGVyLmZpbmQoJ1tuYW1lPVwidHJhc2gtb3V0bGluZVwiXScpLnNpbXVsYXRlKCdwcmVzcycpO1xuLy8gICAgIGV4cGVjdChvblByZXNzRGVsZXRlTW9jaykudG9IYXZlQmVlbkNhbGxlZCgpO1xuLy8gICB9KTtcblxuLy8gICBpdCgncmVuZGVycyB0aGUgdGl0bGUgY29ycmVjdGx5JywgKCkgPT4ge1xuLy8gICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ1RleHQnKS5wcm9wcygpLmNoaWxkcmVuKS50b0VxdWFsKCdUZXN0IFRpdGxlJyk7XG4vLyAgIH0pO1xuXG4vLyAgIGl0KCdhcHBsaWVzIGNvcnJlY3Qgc3R5bGVzIHRvIHRoZSBoZWFkZXIgY29udGFpbmVyJywgKCkgPT4ge1xuLy8gICAgIGV4cGVjdCh3cmFwcGVyLmZpbmQoJ1NhZmVBcmVhVmlldycpLnByb3BzKCkuc3R5bGUpLnRvRXF1YWwoc3R5bGVzLmZsb2F0Q29udGFpbmVyKTtcbi8vICAgfSk7XG4vLyB9KTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBK0I7QUFFL0JBLFFBQVEsQ0FBQyxRQUFRLEVBQUUsWUFBTTtFQUVyQkMsRUFBRSxDQUFDLGtDQUFrQyxFQUFFLFlBQU07SUFDM0MsY0FBaUMsSUFBQUMsb0JBQU0sRUFBQyxxQkFBQyxlQUFNO1FBQUMsS0FBSyxFQUFDLGtCQUFrQjtRQUFFLE1BQU0sRUFBRTtNQUFNLEVBQUcsQ0FBQztNQUFyRkMsU0FBUyxXQUFUQSxTQUFTO01BQUVDLFdBQVcsV0FBWEEsV0FBVztJQUM3QkMsTUFBTSxDQUFDRixTQUFTLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDRyxVQUFVLEVBQUU7SUFDbERELE1BQU0sQ0FBQ0QsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUMvQyxDQUFDLENBQUM7RUFFRkwsRUFBRSxDQUFFLHdCQUF3QixFQUFHLFlBQU07SUFDakMsZUFBaUMsSUFBQUMsb0JBQU0sRUFBQyxxQkFBQyxlQUFNO1FBQUMsS0FBSyxFQUFDLFVBQVU7UUFBRSxNQUFNLEVBQUUsSUFBSztRQUFDLEVBQUUsRUFBRTtNQUFLLEVBQUcsQ0FBQztNQUF0RkMsU0FBUyxZQUFUQSxTQUFTO01BQUVDLFdBQVcsWUFBWEEsV0FBVztJQUM3QkMsTUFBTSxDQUFDRixTQUFTLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQ0csVUFBVSxFQUFFO0lBQzFDRCxNQUFNLENBQUNELFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtFQUM1RCxDQUFDLENBQUM7RUFFRkwsRUFBRSxDQUFFLHlCQUF5QixFQUFHLFlBQU07SUFDbEMsZUFBaUMsSUFBQUMsb0JBQU0sRUFBQyxxQkFBQyxlQUFNO1FBQUMsS0FBSyxFQUFDLFdBQVc7UUFBRSxNQUFNLEVBQUUsSUFBSztRQUFDLEVBQUUsRUFBRTtNQUFNLEVBQUcsQ0FBQztNQUF4RkMsU0FBUyxZQUFUQSxTQUFTO01BQUVDLFdBQVcsWUFBWEEsV0FBVztJQUU3QkMsTUFBTSxDQUFDRixTQUFTLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQ0csVUFBVSxFQUFFO0lBQzNDRCxNQUFNLENBQUNELFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDLENBQUNFLFVBQVUsRUFBRTtJQUN4REQsTUFBTSxDQUFDRCxXQUFXLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQ0UsVUFBVSxFQUFFO0VBRXJELENBQUMsQ0FBQztFQUVGTCxFQUFFLENBQUMsOENBQThDLEVBQUUsWUFBTTtJQUN2RCxJQUFNTSxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ3pCLGVBQXNCLElBQUFQLG9CQUFNLEVBQUMscUJBQUMsZUFBTTtRQUFDLEtBQUssRUFBQyxZQUFZO1FBQUMsT0FBTyxFQUFFSztNQUFRLEVBQUcsQ0FBQztNQUF0RUgsV0FBVyxZQUFYQSxXQUFXO0lBQ2xCTSx1QkFBUyxDQUFDQyxLQUFLLENBQUNQLFdBQVcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUN6Q0MsTUFBTSxDQUFDRSxPQUFPLENBQUMsQ0FBQ0ssZ0JBQWdCLEVBQUU7RUFDcEMsQ0FBQyxDQUFDO0VBRUZYLEVBQUUsQ0FBQyxzREFBc0QsRUFBRSxZQUFNO0lBQy9ELElBQU1ZLGFBQWEsR0FBR0wsSUFBSSxDQUFDQyxFQUFFLEVBQUU7SUFDL0IsZUFBc0IsSUFBQVAsb0JBQU0sRUFDMUIscUJBQUMsZUFBTTtRQUFDLEtBQUssRUFBQyxZQUFZO1FBQUMsRUFBRSxFQUFFLEtBQU07UUFBQyxhQUFhLEVBQUVXO01BQWMsRUFBRyxDQUN2RTtNQUZNVCxXQUFXLFlBQVhBLFdBQVc7SUFHbEJNLHVCQUFTLENBQUNDLEtBQUssQ0FBQ1AsV0FBVyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0lBQzdDQyxNQUFNLENBQUNRLGFBQWEsQ0FBQyxDQUFDRCxnQkFBZ0IsRUFBRTtFQUMxQyxDQUFDLENBQUM7QUFRTixDQUFDLENBQUMifQ==