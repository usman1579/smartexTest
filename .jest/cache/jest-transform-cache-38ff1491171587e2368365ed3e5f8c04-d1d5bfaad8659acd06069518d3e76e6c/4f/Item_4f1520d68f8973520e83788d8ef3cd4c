3aed1e47c6710558f087f6e415a7629c
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Item = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _checkbox = _interopRequireDefault(require("@react-native-community/checkbox"));
var _jsxRuntime = require("react/jsx-runtime");
var Item = function Item(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.itemContainer,
    testID: props.testID,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.checkBox,
      children: (0, _jsxRuntime.jsx)(_checkbox.default, {
        disabled: false,
        value: props.CheckBox,
        onValueChange: props.onValueChange
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      onPress: props.onPressItem,
      style: {
        flex: 5,
        justifyContent: 'center'
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textTitle,
        children: props.title
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.description
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.date
      })]
    })]
  });
};
exports.Item = Item;
var styles = _reactNative.StyleSheet.create({
  text1: {
    fontSize: 12,
    fontWeight: '500',
    color: 'grey'
  },
  textTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'black'
  },
  itemContainer: {
    height: 80,
    width: '100%',
    flexDirection: 'row',
    marginBottom: 5
  },
  checkBox: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJdGVtIiwicHJvcHMiLCJzdHlsZXMiLCJpdGVtQ29udGFpbmVyIiwidGVzdElEIiwiY2hlY2tCb3giLCJDaGVja0JveCIsIm9uVmFsdWVDaGFuZ2UiLCJvblByZXNzSXRlbSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsInRleHRUaXRsZSIsInRpdGxlIiwidGV4dDEiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJoZWlnaHQiLCJ3aWR0aCIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5Cb3R0b20iLCJhbGlnbkl0ZW1zIl0sInNvdXJjZXMiOlsiSXRlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0eWxlU2hlZXQsIFRleHQsIFZpZXcsIFRvdWNoYWJsZU9wYWNpdHl9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENoZWNrQm94IGZyb20gJ0ByZWFjdC1uYXRpdmUtY29tbXVuaXR5L2NoZWNrYm94JztcblxuZXhwb3J0IGNvbnN0IEl0ZW0gPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5pdGVtQ29udGFpbmVyfSAgdGVzdElEPXtwcm9wcy50ZXN0SUR9PlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jaGVja0JveH0+XG4gICAgICAgIDxDaGVja0JveFxuICAgICAgICAgIGRpc2FibGVkPXtmYWxzZX1cbiAgICAgICAgICB2YWx1ZT17cHJvcHMuQ2hlY2tCb3h9XG4gICAgICAgICAgb25WYWx1ZUNoYW5nZT17cHJvcHMub25WYWx1ZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgIDwvVmlldz5cblxuICAgICAgPFRvdWNoYWJsZU9wYWNpdHlcbiAgICAgICAgb25QcmVzcz17cHJvcHMub25QcmVzc0l0ZW19XG4gICAgICAgIHN0eWxlPXt7ZmxleDogNSwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInfX0+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dFRpdGxlfT57cHJvcHMudGl0bGV9PC9UZXh0PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGVzY3JpcHRpb259PC9UZXh0PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGF0ZX08L1RleHQ+XG4gICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICB0ZXh0MToge1xuICAgIGZvbnRTaXplOiAxMixcbiAgICBmb250V2VpZ2h0OiAnNTAwJyxcbiAgICBjb2xvcjogJ2dyZXknLFxuICB9LFxuICB0ZXh0VGl0bGU6IHtcbiAgICBmb250U2l6ZTogMTYsXG4gICAgZm9udFdlaWdodDogJ2JvbGQnLFxuICAgIGNvbG9yOiAnYmxhY2snLFxuICB9LFxuICBpdGVtQ29udGFpbmVyOiB7XG4gICAgaGVpZ2h0OiA4MCxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnLFxuICAgIG1hcmdpbkJvdHRvbTogNSxcbiAgfSxcbiAgY2hlY2tCb3g6IHtcbiAgICBmbGV4OiAxLFxuICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgfSxcbn0pO1xuIl0sIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUF3RDtBQUVqRCxJQUFNQSxJQUFJLEdBQUcsU0FBUEEsSUFBSSxDQUFHQyxLQUFLLEVBQUk7RUFDM0IsT0FDRSxzQkFBQyxpQkFBSTtJQUFDLEtBQUssRUFBRUMsTUFBTSxDQUFDQyxhQUFjO0lBQUUsTUFBTSxFQUFFRixLQUFLLENBQUNHLE1BQU87SUFBQSxXQUN2RCxxQkFBQyxpQkFBSTtNQUFDLEtBQUssRUFBRUYsTUFBTSxDQUFDRyxRQUFTO01BQUEsVUFDM0IscUJBQUMsaUJBQVE7UUFDUCxRQUFRLEVBQUUsS0FBTTtRQUNoQixLQUFLLEVBQUVKLEtBQUssQ0FBQ0ssUUFBUztRQUN0QixhQUFhLEVBQUVMLEtBQUssQ0FBQ007TUFBYztJQUNuQyxFQUNHLEVBRVAsc0JBQUMsNkJBQWdCO01BQ2YsT0FBTyxFQUFFTixLQUFLLENBQUNPLFdBQVk7TUFDM0IsS0FBSyxFQUFFO1FBQUNDLElBQUksRUFBRSxDQUFDO1FBQUVDLGNBQWMsRUFBRTtNQUFRLENBQUU7TUFBQSxXQUMzQyxxQkFBQyxpQkFBSTtRQUFDLEtBQUssRUFBRVIsTUFBTSxDQUFDUyxTQUFVO1FBQUEsVUFBRVYsS0FBSyxDQUFDVztNQUFLLEVBQVEsRUFDbkQscUJBQUMsaUJBQUk7UUFBQyxLQUFLLEVBQUVWLE1BQU0sQ0FBQ1csS0FBTTtRQUFBLFVBQUVaLEtBQUssQ0FBQ2E7TUFBVyxFQUFRLEVBQ3JELHFCQUFDLGlCQUFJO1FBQUMsS0FBSyxFQUFFWixNQUFNLENBQUNXLEtBQU07UUFBQSxVQUFFWixLQUFLLENBQUNjO01BQUksRUFBUTtJQUFBLEVBQzdCO0VBQUEsRUFDZDtBQUVYLENBQUM7QUFBQztBQUVGLElBQU1iLE1BQU0sR0FBR2MsdUJBQVUsQ0FBQ0MsTUFBTSxDQUFDO0VBQy9CSixLQUFLLEVBQUU7SUFDTEssUUFBUSxFQUFFLEVBQUU7SUFDWkMsVUFBVSxFQUFFLEtBQUs7SUFDakJDLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRFQsU0FBUyxFQUFFO0lBQ1RPLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRSxNQUFNO0lBQ2xCQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RqQixhQUFhLEVBQUU7SUFDYmtCLE1BQU0sRUFBRSxFQUFFO0lBQ1ZDLEtBQUssRUFBRSxNQUFNO0lBQ2JDLGFBQWEsRUFBRSxLQUFLO0lBQ3BCQyxZQUFZLEVBQUU7RUFDaEIsQ0FBQztFQUNEbkIsUUFBUSxFQUFFO0lBQ1JJLElBQUksRUFBRSxDQUFDO0lBQ1BDLGNBQWMsRUFBRSxRQUFRO0lBQ3hCZSxVQUFVLEVBQUU7RUFDZDtBQUNGLENBQUMsQ0FBQyJ9