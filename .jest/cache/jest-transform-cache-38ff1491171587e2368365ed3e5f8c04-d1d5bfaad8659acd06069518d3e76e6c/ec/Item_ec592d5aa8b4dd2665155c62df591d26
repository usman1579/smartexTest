7171343a3957c53029c480ee3d80fb91
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Item = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
var _checkbox = _interopRequireDefault(require("@react-native-community/checkbox"));
var _jsxRuntime = require("react/jsx-runtime");
var Item = function Item(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.itemContainer,
    testID: "item",
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.checkBox,
      children: (0, _jsxRuntime.jsx)(_checkbox.default, {
        disabled: false,
        value: props.CheckBox,
        onValueChange: props.onValueChange
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return props.onPressItem(props.item);
      },
      style: {
        flex: 5,
        justifyContent: 'center'
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textTitle,
        children: props.title
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.description
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.date
      })]
    })]
  });
};
exports.Item = Item;
var styles = _reactNative.StyleSheet.create({
  text1: {
    fontSize: 12,
    fontWeight: '500',
    color: 'grey'
  },
  textTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'black'
  },
  itemContainer: {
    height: 80,
    width: '100%',
    flexDirection: 'row',
    marginBottom: 5
  },
  checkBox: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJdGVtIiwicHJvcHMiLCJzdHlsZXMiLCJpdGVtQ29udGFpbmVyIiwiY2hlY2tCb3giLCJDaGVja0JveCIsIm9uVmFsdWVDaGFuZ2UiLCJvblByZXNzSXRlbSIsIml0ZW0iLCJmbGV4IiwianVzdGlmeUNvbnRlbnQiLCJ0ZXh0VGl0bGUiLCJ0aXRsZSIsInRleHQxIiwiZGVzY3JpcHRpb24iLCJkYXRlIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsImNvbG9yIiwiaGVpZ2h0Iiwid2lkdGgiLCJmbGV4RGlyZWN0aW9uIiwibWFyZ2luQm90dG9tIiwiYWxpZ25JdGVtcyJdLCJzb3VyY2VzIjpbIkl0ZW0uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7U3R5bGVTaGVldCwgVGV4dCwgVmlldywgVG91Y2hhYmxlT3BhY2l0eX0gZnJvbSAncmVhY3QtbmF0aXZlJztcbmltcG9ydCBDaGVja0JveCBmcm9tICdAcmVhY3QtbmF0aXZlLWNvbW11bml0eS9jaGVja2JveCc7XG5cbmV4cG9ydCBjb25zdCBJdGVtID0gcHJvcHMgPT4gKFxuICA8VmlldyBzdHlsZT17c3R5bGVzLml0ZW1Db250YWluZXJ9IHRlc3RJRD0naXRlbSc+XG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jaGVja0JveH0+XG4gICAgICA8Q2hlY2tCb3hcbiAgICAgICAgZGlzYWJsZWQ9e2ZhbHNlfVxuICAgICAgICB2YWx1ZT17cHJvcHMuQ2hlY2tCb3h9XG4gICAgICAgIG9uVmFsdWVDaGFuZ2U9e3Byb3BzLm9uVmFsdWVDaGFuZ2V9XG4gICAgICAvPlxuICAgIDwvVmlldz5cblxuICAgIDxUb3VjaGFibGVPcGFjaXR5XG4gICAgICBvblByZXNzPXsoKSA9PiBwcm9wcy5vblByZXNzSXRlbShwcm9wcy5pdGVtKX1cbiAgICAgIHN0eWxlPXt7ZmxleDogNSwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInfX0+XG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHRUaXRsZX0+e3Byb3BzLnRpdGxlfTwvVGV4dD5cbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dDF9Pntwcm9wcy5kZXNjcmlwdGlvbn08L1RleHQ+XG4gICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGF0ZX08L1RleHQ+XG4gICAgPC9Ub3VjaGFibGVPcGFjaXR5PlxuICA8L1ZpZXc+XG4pO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gIHRleHQxOiB7XG4gICAgZm9udFNpemU6IDEyLFxuICAgIGZvbnRXZWlnaHQ6ICc1MDAnLFxuICAgIGNvbG9yOiAnZ3JleScsXG4gIH0sXG4gIHRleHRUaXRsZToge1xuICAgIGZvbnRTaXplOiAxNixcbiAgICBmb250V2VpZ2h0OiAnYm9sZCcsXG4gICAgY29sb3I6ICdibGFjaycsXG4gIH0sXG4gIGl0ZW1Db250YWluZXI6IHtcbiAgICBoZWlnaHQ6IDgwLFxuICAgIHdpZHRoOiAnMTAwJScsXG4gICAgZmxleERpcmVjdGlvbjogJ3JvdycsXG4gICAgbWFyZ2luQm90dG9tOiA1LFxuICB9LFxuICBjaGVja0JveDoge1xuICAgIGZsZXg6IDEsXG4gICAganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInLFxuICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICB9LFxufSk7XG4iXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQXdEO0FBRWpELElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFJLENBQUdDLEtBQUs7RUFBQSxPQUN2QixzQkFBQyxpQkFBSTtJQUFDLEtBQUssRUFBRUMsTUFBTSxDQUFDQyxhQUFjO0lBQUMsTUFBTSxFQUFDLE1BQU07SUFBQSxXQUM5QyxxQkFBQyxpQkFBSTtNQUFDLEtBQUssRUFBRUQsTUFBTSxDQUFDRSxRQUFTO01BQUEsVUFDM0IscUJBQUMsaUJBQVE7UUFDUCxRQUFRLEVBQUUsS0FBTTtRQUNoQixLQUFLLEVBQUVILEtBQUssQ0FBQ0ksUUFBUztRQUN0QixhQUFhLEVBQUVKLEtBQUssQ0FBQ0s7TUFBYztJQUNuQyxFQUNHLEVBRVAsc0JBQUMsNkJBQWdCO01BQ2YsT0FBTyxFQUFFO1FBQUEsT0FBTUwsS0FBSyxDQUFDTSxXQUFXLENBQUNOLEtBQUssQ0FBQ08sSUFBSSxDQUFDO01BQUEsQ0FBQztNQUM3QyxLQUFLLEVBQUU7UUFBQ0MsSUFBSSxFQUFFLENBQUM7UUFBRUMsY0FBYyxFQUFFO01BQVEsQ0FBRTtNQUFBLFdBQzNDLHFCQUFDLGlCQUFJO1FBQUMsS0FBSyxFQUFFUixNQUFNLENBQUNTLFNBQVU7UUFBQSxVQUFFVixLQUFLLENBQUNXO01BQUssRUFBUSxFQUNuRCxxQkFBQyxpQkFBSTtRQUFDLEtBQUssRUFBRVYsTUFBTSxDQUFDVyxLQUFNO1FBQUEsVUFBRVosS0FBSyxDQUFDYTtNQUFXLEVBQVEsRUFDckQscUJBQUMsaUJBQUk7UUFBQyxLQUFLLEVBQUVaLE1BQU0sQ0FBQ1csS0FBTTtRQUFBLFVBQUVaLEtBQUssQ0FBQ2M7TUFBSSxFQUFRO0lBQUEsRUFDN0I7RUFBQSxFQUNkO0FBQUEsQ0FDUjtBQUFDO0FBRUYsSUFBTWIsTUFBTSxHQUFHYyx1QkFBVSxDQUFDQyxNQUFNLENBQUM7RUFDL0JKLEtBQUssRUFBRTtJQUNMSyxRQUFRLEVBQUUsRUFBRTtJQUNaQyxVQUFVLEVBQUUsS0FBSztJQUNqQkMsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNEVCxTQUFTLEVBQUU7SUFDVE8sUUFBUSxFQUFFLEVBQUU7SUFDWkMsVUFBVSxFQUFFLE1BQU07SUFDbEJDLEtBQUssRUFBRTtFQUNULENBQUM7RUFDRGpCLGFBQWEsRUFBRTtJQUNia0IsTUFBTSxFQUFFLEVBQUU7SUFDVkMsS0FBSyxFQUFFLE1BQU07SUFDYkMsYUFBYSxFQUFFLEtBQUs7SUFDcEJDLFlBQVksRUFBRTtFQUNoQixDQUFDO0VBQ0RwQixRQUFRLEVBQUU7SUFDUkssSUFBSSxFQUFFLENBQUM7SUFDUEMsY0FBYyxFQUFFLFFBQVE7SUFDeEJlLFVBQVUsRUFBRTtFQUNkO0FBQ0YsQ0FBQyxDQUFDIn0=