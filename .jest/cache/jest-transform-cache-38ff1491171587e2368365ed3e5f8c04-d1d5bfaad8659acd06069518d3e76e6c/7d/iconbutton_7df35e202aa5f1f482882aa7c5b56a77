e1a1cc6b8e0ddde828c8b01c14a65348
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createIconButtonComponent;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactNative = require("react-native");
var _objectUtils = require("./object-utils");
var _jsxFileName = "/home/runner/work/react-native-vector-icons/react-native-vector-icons/lib/icon-button.js";
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    justifyContent: 'flex-start',
    alignItems: 'center',
    padding: 8
  },
  touchable: {
    overflow: 'hidden'
  },
  icon: {
    marginRight: 10
  },
  text: {
    fontWeight: '600',
    backgroundColor: 'transparent'
  }
});
var IOS7_BLUE = '#007AFF';
var TEXT_PROP_NAMES = ['ellipsizeMode', 'numberOfLines', 'textBreakStrategy', 'selectable', 'suppressHighlighting', 'allowFontScaling', 'adjustsFontSizeToFit', 'minimumFontScale'];
var TOUCHABLE_PROP_NAMES = ['accessible', 'accessibilityLabel', 'accessibilityHint', 'accessibilityComponentType', 'accessibilityRole', 'accessibilityStates', 'accessibilityTraits', 'onFocus', 'onBlur', 'disabled', 'onPress', 'onPressIn', 'onPressOut', 'onLayout', 'onLongPress', 'nativeID', 'testID', 'delayPressIn', 'delayPressOut', 'delayLongPress', 'activeOpacity', 'underlayColor', 'selectionColor', 'onShowUnderlay', 'onHideUnderlay', 'hasTVPreferredFocus', 'tvParallaxProperties'];
function createIconButtonComponent(Icon) {
  var _class, _temp;
  return _temp = _class = function (_PureComponent) {
    (0, _inherits2.default)(IconButton, _PureComponent);
    function IconButton() {
      (0, _classCallCheck2.default)(this, IconButton);
      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(IconButton).apply(this, arguments));
    }
    (0, _createClass2.default)(IconButton, [{
      key: "render",
      value: function render() {
        var _this$props = this.props,
          style = _this$props.style,
          iconStyle = _this$props.iconStyle,
          children = _this$props.children,
          restProps = (0, _objectWithoutProperties2.default)(_this$props, ["style", "iconStyle", "children"]);
        var iconProps = (0, _objectUtils.pick)(restProps, TEXT_PROP_NAMES, 'style', 'name', 'size', 'color');
        var touchableProps = (0, _objectUtils.pick)(restProps, TOUCHABLE_PROP_NAMES);
        var props = (0, _objectUtils.omit)(restProps, Object.keys(iconProps), Object.keys(touchableProps), 'iconStyle', 'borderRadius', 'backgroundColor');
        iconProps.style = iconStyle ? [styles.icon, iconStyle] : styles.icon;
        var colorStyle = (0, _objectUtils.pick)(this.props, 'color');
        var blockStyle = (0, _objectUtils.pick)(this.props, 'backgroundColor', 'borderRadius');
        return _react.default.createElement(_reactNative.TouchableHighlight, (0, _extends2.default)({
          style: [styles.touchable, blockStyle]
        }, touchableProps, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 116
          }
        }), _react.default.createElement(_reactNative.View, (0, _extends2.default)({
          style: [styles.container, blockStyle, style]
        }, props, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 120
          }
        }), _react.default.createElement(Icon, (0, _extends2.default)({}, iconProps, {
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 121
          }
        })), typeof children === 'string' ? _react.default.createElement(_reactNative.Text, {
          style: [styles.text, colorStyle],
          selectable: false,
          __self: this,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 123
          }
        }, children) : children));
      }
    }]);
    return IconButton;
  }(_react.PureComponent), _class.propTypes = {
    backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
    borderRadius: _propTypes.default.number,
    color: _propTypes.default.any,
    size: _propTypes.default.number,
    iconStyle: _propTypes.default.any,
    style: _propTypes.default.any,
    children: _propTypes.default.node
  }, _class.defaultProps = {
    backgroundColor: IOS7_BLUE,
    borderRadius: 5,
    color: 'white',
    size: 20
  }, _temp;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsImNyZWF0ZUljb25CdXR0b25Db21wb25lbnQiLCJfZXh0ZW5kczIiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX2NsYXNzQ2FsbENoZWNrMiIsIl9jcmVhdGVDbGFzczIiLCJfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjIiLCJfZ2V0UHJvdG90eXBlT2YyIiwiX2luaGVyaXRzMiIsIl9yZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3Byb3BUeXBlcyIsIl9yZWFjdE5hdGl2ZSIsIl9vYmplY3RVdGlscyIsIl9qc3hGaWxlTmFtZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJzdHlsZXMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiY29udGFpbmVyIiwiZmxleERpcmVjdGlvbiIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsInBhZGRpbmciLCJ0b3VjaGFibGUiLCJvdmVyZmxvdyIsImljb24iLCJtYXJnaW5SaWdodCIsInRleHQiLCJmb250V2VpZ2h0IiwiYmFja2dyb3VuZENvbG9yIiwiSU9TN19CTFVFIiwiVEVYVF9QUk9QX05BTUVTIiwiVE9VQ0hBQkxFX1BST1BfTkFNRVMiLCJJY29uIiwiX2NsYXNzIiwiX3RlbXAiLCJfUHVyZUNvbXBvbmVudCIsIkljb25CdXR0b24iLCJhcHBseSIsImFyZ3VtZW50cyIsInJlbmRlciIsIl90aGlzJHByb3BzIiwicHJvcHMiLCJzdHlsZSIsImljb25TdHlsZSIsImNoaWxkcmVuIiwicmVzdFByb3BzIiwiaWNvblByb3BzIiwicGljayIsInRvdWNoYWJsZVByb3BzIiwib21pdCIsImtleXMiLCJjb2xvclN0eWxlIiwiYmxvY2tTdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJUb3VjaGFibGVIaWdobGlnaHQiLCJfX3NlbGYiLCJfX3NvdXJjZSIsImZpbGVOYW1lIiwibGluZU51bWJlciIsIlZpZXciLCJUZXh0Iiwic2VsZWN0YWJsZSIsIlB1cmVDb21wb25lbnQiLCJwcm9wVHlwZXMiLCJvbmVPZlR5cGUiLCJzdHJpbmciLCJudW1iZXIiLCJib3JkZXJSYWRpdXMiLCJjb2xvciIsImFueSIsInNpemUiLCJub2RlIiwiZGVmYXVsdFByb3BzIl0sInNvdXJjZXMiOlsiaWNvbi1idXR0b24uanMiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ9cmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy5kZWZhdWx0PWNyZWF0ZUljb25CdXR0b25Db21wb25lbnQ7dmFyIF9leHRlbmRzMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2V4dGVuZHNcIikpO3ZhciBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0V2l0aG91dFByb3BlcnRpZXNcIikpO3ZhciBfY2xhc3NDYWxsQ2hlY2syPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIikpO3ZhciBfY3JlYXRlQ2xhc3MyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIikpO3ZhciBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCIpKTt2YXIgX2dldFByb3RvdHlwZU9mMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCIpKTt2YXIgX2luaGVyaXRzMj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCIpKTt2YXIgX3JlYWN0PV9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKHJlcXVpcmUoXCJyZWFjdFwiKSk7dmFyIF9wcm9wVHlwZXM9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwicHJvcC10eXBlc1wiKSk7dmFyIF9yZWFjdE5hdGl2ZT1yZXF1aXJlKFwicmVhY3QtbmF0aXZlXCIpO3ZhciBfb2JqZWN0VXRpbHM9cmVxdWlyZShcIi4vb2JqZWN0LXV0aWxzXCIpO3ZhciBfanN4RmlsZU5hbWU9XCIvaG9tZS9ydW5uZXIvd29yay9yZWFjdC1uYXRpdmUtdmVjdG9yLWljb25zL3JlYWN0LW5hdGl2ZS12ZWN0b3ItaWNvbnMvbGliL2ljb24tYnV0dG9uLmpzXCI7ZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKXtpZih0eXBlb2YgV2Vha01hcCE9PVwiZnVuY3Rpb25cIilyZXR1cm4gbnVsbDt2YXIgY2FjaGVCYWJlbEludGVyb3A9bmV3IFdlYWtNYXAoKTt2YXIgY2FjaGVOb2RlSW50ZXJvcD1uZXcgV2Vha01hcCgpO3JldHVybihfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGU9ZnVuY3Rpb24gX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlKG5vZGVJbnRlcm9wKXtyZXR1cm4gbm9kZUludGVyb3A/Y2FjaGVOb2RlSW50ZXJvcDpjYWNoZUJhYmVsSW50ZXJvcDt9KShub2RlSW50ZXJvcCk7fWZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkKG9iaixub2RlSW50ZXJvcCl7aWYoIW5vZGVJbnRlcm9wJiZvYmomJm9iai5fX2VzTW9kdWxlKXtyZXR1cm4gb2JqO31pZihvYmo9PT1udWxsfHx0eXBlb2Ygb2JqIT09XCJvYmplY3RcIiYmdHlwZW9mIG9iaiE9PVwiZnVuY3Rpb25cIil7cmV0dXJue2RlZmF1bHQ6b2JqfTt9dmFyIGNhY2hlPV9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZShub2RlSW50ZXJvcCk7aWYoY2FjaGUmJmNhY2hlLmhhcyhvYmopKXtyZXR1cm4gY2FjaGUuZ2V0KG9iaik7fXZhciBuZXdPYmo9e307dmFyIGhhc1Byb3BlcnR5RGVzY3JpcHRvcj1PYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7Zm9yKHZhciBrZXkgaW4gb2JqKXtpZihrZXkhPT1cImRlZmF1bHRcIiYmT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaixrZXkpKXt2YXIgZGVzYz1oYXNQcm9wZXJ0eURlc2NyaXB0b3I/T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmosa2V5KTpudWxsO2lmKGRlc2MmJihkZXNjLmdldHx8ZGVzYy5zZXQpKXtPYmplY3QuZGVmaW5lUHJvcGVydHkobmV3T2JqLGtleSxkZXNjKTt9ZWxzZXtuZXdPYmpba2V5XT1vYmpba2V5XTt9fX1uZXdPYmouZGVmYXVsdD1vYmo7aWYoY2FjaGUpe2NhY2hlLnNldChvYmosbmV3T2JqKTt9cmV0dXJuIG5ld09iajt9dmFyIHN0eWxlcz1fcmVhY3ROYXRpdmUuU3R5bGVTaGVldC5jcmVhdGUoe2NvbnRhaW5lcjp7ZmxleERpcmVjdGlvbjoncm93JyxqdXN0aWZ5Q29udGVudDonZmxleC1zdGFydCcsYWxpZ25JdGVtczonY2VudGVyJyxwYWRkaW5nOjh9LHRvdWNoYWJsZTp7b3ZlcmZsb3c6J2hpZGRlbid9LGljb246e21hcmdpblJpZ2h0OjEwfSx0ZXh0Ontmb250V2VpZ2h0Oic2MDAnLGJhY2tncm91bmRDb2xvcjondHJhbnNwYXJlbnQnfX0pO3ZhciBJT1M3X0JMVUU9JyMwMDdBRkYnO3ZhciBURVhUX1BST1BfTkFNRVM9WydlbGxpcHNpemVNb2RlJywnbnVtYmVyT2ZMaW5lcycsJ3RleHRCcmVha1N0cmF0ZWd5Jywnc2VsZWN0YWJsZScsJ3N1cHByZXNzSGlnaGxpZ2h0aW5nJywnYWxsb3dGb250U2NhbGluZycsJ2FkanVzdHNGb250U2l6ZVRvRml0JywnbWluaW11bUZvbnRTY2FsZSddO3ZhciBUT1VDSEFCTEVfUFJPUF9OQU1FUz1bJ2FjY2Vzc2libGUnLCdhY2Nlc3NpYmlsaXR5TGFiZWwnLCdhY2Nlc3NpYmlsaXR5SGludCcsJ2FjY2Vzc2liaWxpdHlDb21wb25lbnRUeXBlJywnYWNjZXNzaWJpbGl0eVJvbGUnLCdhY2Nlc3NpYmlsaXR5U3RhdGVzJywnYWNjZXNzaWJpbGl0eVRyYWl0cycsJ29uRm9jdXMnLCdvbkJsdXInLCdkaXNhYmxlZCcsJ29uUHJlc3MnLCdvblByZXNzSW4nLCdvblByZXNzT3V0Jywnb25MYXlvdXQnLCdvbkxvbmdQcmVzcycsJ25hdGl2ZUlEJywndGVzdElEJywnZGVsYXlQcmVzc0luJywnZGVsYXlQcmVzc091dCcsJ2RlbGF5TG9uZ1ByZXNzJywnYWN0aXZlT3BhY2l0eScsJ3VuZGVybGF5Q29sb3InLCdzZWxlY3Rpb25Db2xvcicsJ29uU2hvd1VuZGVybGF5Jywnb25IaWRlVW5kZXJsYXknLCdoYXNUVlByZWZlcnJlZEZvY3VzJywndHZQYXJhbGxheFByb3BlcnRpZXMnXTtmdW5jdGlvbiBjcmVhdGVJY29uQnV0dG9uQ29tcG9uZW50KEljb24pe3ZhciBfY2xhc3MsX3RlbXA7cmV0dXJuIF90ZW1wPV9jbGFzcz1mdW5jdGlvbihfUHVyZUNvbXBvbmVudCl7KDAsX2luaGVyaXRzMi5kZWZhdWx0KShJY29uQnV0dG9uLF9QdXJlQ29tcG9uZW50KTtmdW5jdGlvbiBJY29uQnV0dG9uKCl7KDAsX2NsYXNzQ2FsbENoZWNrMi5kZWZhdWx0KSh0aGlzLEljb25CdXR0b24pO3JldHVybigwLF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuMi5kZWZhdWx0KSh0aGlzLCgwLF9nZXRQcm90b3R5cGVPZjIuZGVmYXVsdCkoSWNvbkJ1dHRvbikuYXBwbHkodGhpcyxhcmd1bWVudHMpKTt9KDAsX2NyZWF0ZUNsYXNzMi5kZWZhdWx0KShJY29uQnV0dG9uLFt7a2V5OlwicmVuZGVyXCIsdmFsdWU6ZnVuY3Rpb24gcmVuZGVyKCl7dmFyIF90aGlzJHByb3BzPXRoaXMucHJvcHMsc3R5bGU9X3RoaXMkcHJvcHMuc3R5bGUsaWNvblN0eWxlPV90aGlzJHByb3BzLmljb25TdHlsZSxjaGlsZHJlbj1fdGhpcyRwcm9wcy5jaGlsZHJlbixyZXN0UHJvcHM9KDAsX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMi5kZWZhdWx0KShfdGhpcyRwcm9wcyxbXCJzdHlsZVwiLFwiaWNvblN0eWxlXCIsXCJjaGlsZHJlblwiXSk7dmFyIGljb25Qcm9wcz0oMCxfb2JqZWN0VXRpbHMucGljaykocmVzdFByb3BzLFRFWFRfUFJPUF9OQU1FUywnc3R5bGUnLCduYW1lJywnc2l6ZScsJ2NvbG9yJyk7dmFyIHRvdWNoYWJsZVByb3BzPSgwLF9vYmplY3RVdGlscy5waWNrKShyZXN0UHJvcHMsVE9VQ0hBQkxFX1BST1BfTkFNRVMpO3ZhciBwcm9wcz0oMCxfb2JqZWN0VXRpbHMub21pdCkocmVzdFByb3BzLE9iamVjdC5rZXlzKGljb25Qcm9wcyksT2JqZWN0LmtleXModG91Y2hhYmxlUHJvcHMpLCdpY29uU3R5bGUnLCdib3JkZXJSYWRpdXMnLCdiYWNrZ3JvdW5kQ29sb3InKTtpY29uUHJvcHMuc3R5bGU9aWNvblN0eWxlP1tzdHlsZXMuaWNvbixpY29uU3R5bGVdOnN0eWxlcy5pY29uO3ZhciBjb2xvclN0eWxlPSgwLF9vYmplY3RVdGlscy5waWNrKSh0aGlzLnByb3BzLCdjb2xvcicpO3ZhciBibG9ja1N0eWxlPSgwLF9vYmplY3RVdGlscy5waWNrKSh0aGlzLnByb3BzLCdiYWNrZ3JvdW5kQ29sb3InLCdib3JkZXJSYWRpdXMnKTtyZXR1cm4gX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChfcmVhY3ROYXRpdmUuVG91Y2hhYmxlSGlnaGxpZ2h0LCgwLF9leHRlbmRzMi5kZWZhdWx0KSh7c3R5bGU6W3N0eWxlcy50b3VjaGFibGUsYmxvY2tTdHlsZV19LHRvdWNoYWJsZVByb3BzLHtfX3NlbGY6dGhpcyxfX3NvdXJjZTp7ZmlsZU5hbWU6X2pzeEZpbGVOYW1lLGxpbmVOdW1iZXI6MTE2fX0pLF9yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0TmF0aXZlLlZpZXcsKDAsX2V4dGVuZHMyLmRlZmF1bHQpKHtzdHlsZTpbc3R5bGVzLmNvbnRhaW5lcixibG9ja1N0eWxlLHN0eWxlXX0scHJvcHMse19fc2VsZjp0aGlzLF9fc291cmNlOntmaWxlTmFtZTpfanN4RmlsZU5hbWUsbGluZU51bWJlcjoxMjB9fSksX3JlYWN0LmRlZmF1bHQuY3JlYXRlRWxlbWVudChJY29uLCgwLF9leHRlbmRzMi5kZWZhdWx0KSh7fSxpY29uUHJvcHMse19fc2VsZjp0aGlzLF9fc291cmNlOntmaWxlTmFtZTpfanN4RmlsZU5hbWUsbGluZU51bWJlcjoxMjF9fSkpLHR5cGVvZiBjaGlsZHJlbj09PSdzdHJpbmcnP19yZWFjdC5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoX3JlYWN0TmF0aXZlLlRleHQse3N0eWxlOltzdHlsZXMudGV4dCxjb2xvclN0eWxlXSxzZWxlY3RhYmxlOmZhbHNlLF9fc2VsZjp0aGlzLF9fc291cmNlOntmaWxlTmFtZTpfanN4RmlsZU5hbWUsbGluZU51bWJlcjoxMjN9fSxjaGlsZHJlbik6Y2hpbGRyZW4pKTt9fV0pO3JldHVybiBJY29uQnV0dG9uO30oX3JlYWN0LlB1cmVDb21wb25lbnQpLF9jbGFzcy5wcm9wVHlwZXM9e2JhY2tncm91bmRDb2xvcjpfcHJvcFR5cGVzLmRlZmF1bHQub25lT2ZUeXBlKFtfcHJvcFR5cGVzLmRlZmF1bHQuc3RyaW5nLF9wcm9wVHlwZXMuZGVmYXVsdC5udW1iZXJdKSxib3JkZXJSYWRpdXM6X3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlcixjb2xvcjpfcHJvcFR5cGVzLmRlZmF1bHQuYW55LHNpemU6X3Byb3BUeXBlcy5kZWZhdWx0Lm51bWJlcixpY29uU3R5bGU6X3Byb3BUeXBlcy5kZWZhdWx0LmFueSxzdHlsZTpfcHJvcFR5cGVzLmRlZmF1bHQuYW55LGNoaWxkcmVuOl9wcm9wVHlwZXMuZGVmYXVsdC5ub2RlfSxfY2xhc3MuZGVmYXVsdFByb3BzPXtiYWNrZ3JvdW5kQ29sb3I6SU9TN19CTFVFLGJvcmRlclJhZGl1czo1LGNvbG9yOid3aGl0ZScsc2l6ZToyMH0sX3RlbXA7fSJdLCJtYXBwaW5ncyI6IkFBQUEsSUFBSUEsc0JBQXNCLEdBQUNDLE9BQU8sQ0FBQyw4Q0FBOEMsQ0FBQztBQUFDQyxNQUFNLENBQUNDLGNBQWMsQ0FBQ0MsT0FBTyxFQUFDLFlBQVksRUFBQztFQUFDQyxLQUFLLEVBQUM7QUFBSSxDQUFDLENBQUM7QUFBQ0QsT0FBTyxDQUFDRSxPQUFPLEdBQUNDLHlCQUF5QjtBQUFDLElBQUlDLFNBQVMsR0FBQ1Isc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO0FBQUMsSUFBSVEseUJBQXlCLEdBQUNULHNCQUFzQixDQUFDQyxPQUFPLENBQUMsZ0RBQWdELENBQUMsQ0FBQztBQUFDLElBQUlTLGdCQUFnQixHQUFDVixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7QUFBQyxJQUFJVSxhQUFhLEdBQUNYLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQztBQUFDLElBQUlXLDJC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