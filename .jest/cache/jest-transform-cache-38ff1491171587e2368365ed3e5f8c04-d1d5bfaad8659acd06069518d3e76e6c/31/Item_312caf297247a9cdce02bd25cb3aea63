4987ab7fe7273eed091df72c4b8de199
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Item = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _checkbox = _interopRequireDefault(require("@react-native-community/checkbox"));
var _jsxRuntime = require("react/jsx-runtime");
var Item = function Item(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.itemContainer,
    testID: "item",
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.checkBox,
      children: (0, _jsxRuntime.jsx)(_checkbox.default, {
        disabled: false,
        value: props.CheckBox,
        onValueChange: props.onValueChange
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      onPress: props.onPressItem,
      style: {
        flex: 5,
        justifyContent: 'center'
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textTitle,
        children: props.title
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.description
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.date
      })]
    })]
  });
};
exports.Item = Item;
var styles = _reactNative.StyleSheet.create({
  text1: {
    fontSize: 12,
    fontWeight: '500',
    color: 'grey'
  },
  textTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'black'
  },
  itemContainer: {
    height: 80,
    width: '100%',
    flexDirection: 'row',
    marginBottom: 5
  },
  checkBox: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJJdGVtIiwicHJvcHMiLCJzdHlsZXMiLCJpdGVtQ29udGFpbmVyIiwiY2hlY2tCb3giLCJDaGVja0JveCIsIm9uVmFsdWVDaGFuZ2UiLCJvblByZXNzSXRlbSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsInRleHRUaXRsZSIsInRpdGxlIiwidGV4dDEiLCJkZXNjcmlwdGlvbiIsImRhdGUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJoZWlnaHQiLCJ3aWR0aCIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5Cb3R0b20iLCJhbGlnbkl0ZW1zIl0sInNvdXJjZXMiOlsiSXRlbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0eWxlU2hlZXQsIFRleHQsIFZpZXcsIFRvdWNoYWJsZU9wYWNpdHl9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IENoZWNrQm94IGZyb20gJ0ByZWFjdC1uYXRpdmUtY29tbXVuaXR5L2NoZWNrYm94JztcblxuZXhwb3J0IGNvbnN0IEl0ZW0gPSBwcm9wcyA9PiB7XG4gIHJldHVybiAoXG4gICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5pdGVtQ29udGFpbmVyfSAgdGVzdElEPVwiaXRlbVwiPlxuICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jaGVja0JveH0+XG4gICAgICAgIDxDaGVja0JveFxuICAgICAgICAgIGRpc2FibGVkPXtmYWxzZX1cbiAgICAgICAgICB2YWx1ZT17cHJvcHMuQ2hlY2tCb3h9XG4gICAgICAgICAgb25WYWx1ZUNoYW5nZT17cHJvcHMub25WYWx1ZUNoYW5nZX1cbiAgICAgICAgLz5cbiAgICAgIDwvVmlldz5cblxuICAgICAgPFRvdWNoYWJsZU9wYWNpdHlcbiAgICAgICAgb25QcmVzcz17cHJvcHMub25QcmVzc0l0ZW19XG4gICAgICAgIHN0eWxlPXt7ZmxleDogNSwganVzdGlmeUNvbnRlbnQ6ICdjZW50ZXInfX0+XG4gICAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dFRpdGxlfT57cHJvcHMudGl0bGV9PC9UZXh0PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGVzY3JpcHRpb259PC9UZXh0PlxuICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRleHQxfT57cHJvcHMuZGF0ZX08L1RleHQ+XG4gICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG4gICAgPC9WaWV3PlxuICApO1xufTtcblxuXG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGV4dDE6IHtcbiAgICBmb250U2l6ZTogMTIsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgY29sb3I6ICdncmV5JyxcbiAgfSxcbiAgdGV4dFRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICBjb2xvcjogJ2JsYWNrJyxcbiAgfSxcbiAgaXRlbUNvbnRhaW5lcjoge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBtYXJnaW5Cb3R0b206IDUsXG4gIH0sXG4gIGNoZWNrQm94OiB7XG4gICAgZmxleDogMSxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFBd0Q7QUFFakQsSUFBTUEsSUFBSSxHQUFHLFNBQVBBLElBQUksQ0FBR0MsS0FBSyxFQUFJO0VBQzNCLE9BQ0Usc0JBQUMsaUJBQUk7SUFBQyxLQUFLLEVBQUVDLE1BQU0sQ0FBQ0MsYUFBYztJQUFFLE1BQU0sRUFBQyxNQUFNO0lBQUEsV0FDL0MscUJBQUMsaUJBQUk7TUFBQyxLQUFLLEVBQUVELE1BQU0sQ0FBQ0UsUUFBUztNQUFBLFVBQzNCLHFCQUFDLGlCQUFRO1FBQ1AsUUFBUSxFQUFFLEtBQU07UUFDaEIsS0FBSyxFQUFFSCxLQUFLLENBQUNJLFFBQVM7UUFDdEIsYUFBYSxFQUFFSixLQUFLLENBQUNLO01BQWM7SUFDbkMsRUFDRyxFQUVQLHNCQUFDLDZCQUFnQjtNQUNmLE9BQU8sRUFBRUwsS0FBSyxDQUFDTSxXQUFZO01BQzNCLEtBQUssRUFBRTtRQUFDQyxJQUFJLEVBQUUsQ0FBQztRQUFFQyxjQUFjLEVBQUU7TUFBUSxDQUFFO01BQUEsV0FDM0MscUJBQUMsaUJBQUk7UUFBQyxLQUFLLEVBQUVQLE1BQU0sQ0FBQ1EsU0FBVTtRQUFBLFVBQUVULEtBQUssQ0FBQ1U7TUFBSyxFQUFRLEVBQ25ELHFCQUFDLGlCQUFJO1FBQUMsS0FBSyxFQUFFVCxNQUFNLENBQUNVLEtBQU07UUFBQSxVQUFFWCxLQUFLLENBQUNZO01BQVcsRUFBUSxFQUNyRCxxQkFBQyxpQkFBSTtRQUFDLEtBQUssRUFBRVgsTUFBTSxDQUFDVSxLQUFNO1FBQUEsVUFBRVgsS0FBSyxDQUFDYTtNQUFJLEVBQVE7SUFBQSxFQUM3QjtFQUFBLEVBQ2Q7QUFFWCxDQUFDO0FBQUM7QUFJRixJQUFNWixNQUFNLEdBQUdhLHVCQUFVLENBQUNDLE1BQU0sQ0FBQztFQUMvQkosS0FBSyxFQUFFO0lBQ0xLLFFBQVEsRUFBRSxFQUFFO0lBQ1pDLFVBQVUsRUFBRSxLQUFLO0lBQ2pCQyxLQUFLLEVBQUU7RUFDVCxDQUFDO0VBQ0RULFNBQVMsRUFBRTtJQUNUTyxRQUFRLEVBQUUsRUFBRTtJQUNaQyxVQUFVLEVBQUUsTUFBTTtJQUNsQkMsS0FBSyxFQUFFO0VBQ1QsQ0FBQztFQUNEaEIsYUFBYSxFQUFFO0lBQ2JpQixNQUFNLEVBQUUsRUFBRTtJQUNWQyxLQUFLLEVBQUUsTUFBTTtJQUNiQyxhQUFhLEVBQUUsS0FBSztJQUNwQkMsWUFBWSxFQUFFO0VBQ2hCLENBQUM7RUFDRG5CLFFBQVEsRUFBRTtJQUNSSSxJQUFJLEVBQUUsQ0FBQztJQUNQQyxjQUFjLEVBQUUsUUFBUTtJQUN4QmUsVUFBVSxFQUFFO0VBQ2Q7QUFDRixDQUFDLENBQUMifQ==