{"version":3,"names":["PressabilityDebugView","props","__DEV__","isEnabled","normalizedColor","normalizeColor","color","baseColor","toString","padStart","hitSlop","normalizeRect","backgroundColor","slice","borderColor","borderStyle","borderWidth","bottom","left","position","right","top","isDebugEnabled","setEnabled","value"],"sources":["PressabilityDebug.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport normalizeColor from '../StyleSheet/normalizeColor';\nimport type {ColorValue} from '../StyleSheet/StyleSheet';\nimport {normalizeRect, type RectOrSize} from '../StyleSheet/Rect';\n\nimport View from '../Components/View/View';\nimport * as React from 'react';\n\ntype Props = $ReadOnly<{|\n  color: ColorValue,\n  hitSlop: ?RectOrSize,\n|}>;\n\n/**\n * Displays a debug overlay to visualize press targets when enabled via the\n * React Native Inspector. Calls to this module should be guarded by `__DEV__`,\n * for example:\n *\n *   return (\n *     <View>\n *       {children}\n *       {__DEV__ ? (\n *         <PressabilityDebugView color=\"...\" hitSlop={props.hitSlop} />\n *       ) : null}\n *     </View>\n *   );\n *\n */\nexport function PressabilityDebugView(props: Props): React.Node {\n  if (__DEV__) {\n    if (isEnabled()) {\n      const normalizedColor = normalizeColor(props.color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      const baseColor =\n        '#' + (normalizedColor ?? 0).toString(16).padStart(8, '0');\n      const hitSlop = normalizeRect(props.hitSlop);\n      return (\n        <View\n          pointerEvents=\"none\"\n          style={\n            // eslint-disable-next-line react-native/no-inline-styles\n            {\n              backgroundColor: baseColor.slice(0, -2) + '0F', // 15%\n              borderColor: baseColor.slice(0, -2) + '55', // 85%\n              borderStyle: 'dashed',\n              borderWidth: 1,\n              bottom: -(hitSlop?.bottom ?? 0),\n              left: -(hitSlop?.left ?? 0),\n              position: 'absolute',\n              right: -(hitSlop?.right ?? 0),\n              top: -(hitSlop?.top ?? 0),\n            }\n          }\n        />\n      );\n    }\n  }\n  return null;\n}\n\nlet isDebugEnabled = false;\n\nexport function isEnabled(): boolean {\n  if (__DEV__) {\n    return isDebugEnabled;\n  }\n  return false;\n}\n\nexport function setEnabled(value: boolean): void {\n  if (__DEV__) {\n    isDebugEnabled = value;\n  }\n}\n"],"mappings":";;;;;;;AAUA;AAEA;AAEA;AACA;AAA+B;AAAA;AAAA;AAsBxB,SAASA,qBAAqB,CAACC,KAAY,EAAc;EAC9D,IAAIC,OAAO,EAAE;IACX,IAAIC,SAAS,EAAE,EAAE;MAAA;MACf,IAAMC,eAAe,GAAG,IAAAC,uBAAc,EAACJ,KAAK,CAACK,KAAK,CAAC;MACnD,IAAI,OAAOF,eAAe,KAAK,QAAQ,EAAE;QACvC,OAAO,IAAI;MACb;MACA,IAAMG,SAAS,GACb,GAAG,GAAG,CAACH,eAAe,WAAfA,eAAe,GAAI,CAAC,EAAEI,QAAQ,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAC5D,IAAMC,OAAO,GAAG,IAAAC,mBAAa,EAACV,KAAK,CAACS,OAAO,CAAC;MAC5C,OACE,qBAAC,aAAI;QACH,aAAa,EAAC,MAAM;QACpB,KAAK,EAEH;UACEE,eAAe,EAAEL,SAAS,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;UAC9CC,WAAW,EAAEP,SAAS,CAACM,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI;UAC1CE,WAAW,EAAE,QAAQ;UACrBC,WAAW,EAAE,CAAC;UACdC,MAAM,EAAE,qBAAEP,OAAO,oBAAPA,OAAO,CAAEO,MAAM,8BAAI,CAAC,CAAC;UAC/BC,IAAI,EAAE,mBAAER,OAAO,oBAAPA,OAAO,CAAEQ,IAAI,4BAAI,CAAC,CAAC;UAC3BC,QAAQ,EAAE,UAAU;UACpBC,KAAK,EAAE,oBAAEV,OAAO,oBAAPA,OAAO,CAAEU,KAAK,6BAAI,CAAC,CAAC;UAC7BC,GAAG,EAAE,kBAAEX,OAAO,oBAAPA,OAAO,CAAEW,GAAG,2BAAI,CAAC;QAC1B;MACD,EACD;IAEN;EACF;EACA,OAAO,IAAI;AACb;AAEA,IAAIC,cAAc,GAAG,KAAK;AAEnB,SAASnB,SAAS,GAAY;EACnC,IAAID,OAAO,EAAE;IACX,OAAOoB,cAAc;EACvB;EACA,OAAO,KAAK;AACd;AAEO,SAASC,UAAU,CAACC,KAAc,EAAQ;EAC/C,IAAItB,OAAO,EAAE;IACXoB,cAAc,GAAGE,KAAK;EACxB;AACF"}