4d9f455de9babeb85bd91720817898b5
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deleteItem = exports.default = exports.addDataToList = void 0;
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _immutabilityHelper = _interopRequireDefault(require("immutability-helper"));
var addDataToList = function addDataToList(val) {
  console.log('val :::', val);
  return {
    type: 'DATA_LIST',
    payload: val
  };
};
exports.addDataToList = addDataToList;
var deleteItem = function deleteItem(val) {
  return {
    type: 'DELETE_ITEM',
    payload: val
  };
};
exports.deleteItem = deleteItem;
var InitialState = {
  dataList: []
};
var reducer = function reducer() {
  var _state$dataList, _state$dataList2;
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitialState;
  var action = arguments.length > 1 ? arguments[1] : undefined;
  switch (action.type) {
    case 'DATA_LIST':
      var index = (_state$dataList = state.dataList) == null ? void 0 : _state$dataList.findIndex(function (p) {
        return p.id == action.payload.id;
      });
      console.log('index', index);
      if (index == -1) {
        return Object.assign({}, state, {
          dataList: [].concat((0, _toConsumableArray2.default)(state.dataList), [action.payload])
        });
      } else {
        return (0, _immutabilityHelper.default)(state, {
          dataList: (0, _defineProperty2.default)({}, index, {
            $set: action.payload
          })
        });
      }
    case 'DELETE_ITEM':
      var newList = (_state$dataList2 = state.dataList) == null ? void 0 : _state$dataList2.filter(function (p) {
        return p.id !== action.payload.id;
      });
      return Object.assign({}, state, {
        dataList: newList
      });
    default:
      return state;
  }
};
var _default = reducer;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhZGREYXRhVG9MaXN0IiwidmFsIiwiY29uc29sZSIsImxvZyIsInR5cGUiLCJwYXlsb2FkIiwiZGVsZXRlSXRlbSIsIkluaXRpYWxTdGF0ZSIsImRhdGFMaXN0IiwicmVkdWNlciIsInN0YXRlIiwiYWN0aW9uIiwiaW5kZXgiLCJmaW5kSW5kZXgiLCJwIiwiaWQiLCJ1cGRhdGUiLCIkc2V0IiwibmV3TGlzdCIsImZpbHRlciJdLCJzb3VyY2VzIjpbInJlZHVjZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVwZGF0ZSBmcm9tICdpbW11dGFiaWxpdHktaGVscGVyJztcblxuZXhwb3J0IGNvbnN0IGFkZERhdGFUb0xpc3QgPSB2YWwgPT4ge1xuICAgIGNvbnNvbGUubG9nKCd2YWwgOjo6Jyx2YWwpXG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0RBVEFfTElTVCcsXG4gICAgcGF5bG9hZDp2YWwsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZGVsZXRlSXRlbSA9IHZhbCA9PiB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogJ0RFTEVURV9JVEVNJyxcbiAgICBwYXlsb2FkOnZhbCxcbiAgfTtcbn07XG5cbmNvbnN0IEluaXRpYWxTdGF0ZSA9IHtcbiAgZGF0YUxpc3Q6IFtdLFxufTtcblxuY29uc3QgcmVkdWNlciA9IChzdGF0ZSA9IEluaXRpYWxTdGF0ZSwgYWN0aW9uKSA9PiB7XG4gIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICBjYXNlICdEQVRBX0xJU1QnOlxuICAgICAgbGV0IGluZGV4ID0gc3RhdGUuZGF0YUxpc3Q/LmZpbmRJbmRleChwID0+IHAuaWQgPT0gYWN0aW9uLnBheWxvYWQuaWQpO1xuICAgICAgY29uc29sZS5sb2coJ2luZGV4JywgaW5kZXgpXG4gICAgICBpZiAoaW5kZXggPT0gLTEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgICBkYXRhTGlzdDogWy4uLnN0YXRlLmRhdGFMaXN0LCBhY3Rpb24ucGF5bG9hZF0sXG4gICAgICAgIH07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gdXBkYXRlKHN0YXRlLCB7XG4gICAgICAgICAgZGF0YUxpc3Q6IHtcbiAgICAgICAgICAgIFtpbmRleF06IHskc2V0OiBhY3Rpb24ucGF5bG9hZH0sXG4gICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICB9XG5cbiAgICBjYXNlICdERUxFVEVfSVRFTSc6XG4gICAgICBsZXQgbmV3TGlzdCA9IHN0YXRlLmRhdGFMaXN0Py5maWx0ZXIocCA9PiBwLmlkICE9PSBhY3Rpb24ucGF5bG9hZC5pZCk7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAuLi5zdGF0ZSxcbiAgICAgICAgZGF0YUxpc3Q6ICBuZXdMaXN0XG4gICAgICB9O1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIHJldHVybiBzdGF0ZTtcbiAgfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcmVkdWNlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBRU8sSUFBTUEsYUFBYSxHQUFHLFNBQWhCQSxhQUFhLENBQUdDLEdBQUcsRUFBSTtFQUNoQ0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsU0FBUyxFQUFDRixHQUFHLENBQUM7RUFDNUIsT0FBTztJQUNMRyxJQUFJLEVBQUUsV0FBVztJQUNqQkMsT0FBTyxFQUFDSjtFQUNWLENBQUM7QUFDSCxDQUFDO0FBQUM7QUFFSyxJQUFNSyxVQUFVLEdBQUcsU0FBYkEsVUFBVSxDQUFHTCxHQUFHLEVBQUk7RUFDL0IsT0FBTztJQUNMRyxJQUFJLEVBQUUsYUFBYTtJQUNuQkMsT0FBTyxFQUFDSjtFQUNWLENBQUM7QUFDSCxDQUFDO0FBQUM7QUFFRixJQUFNTSxZQUFZLEdBQUc7RUFDbkJDLFFBQVEsRUFBRTtBQUNaLENBQUM7QUFFRCxJQUFNQyxPQUFPLEdBQUcsU0FBVkEsT0FBTyxHQUFxQztFQUFBO0VBQUEsSUFBakNDLEtBQUssdUVBQUdILFlBQVk7RUFBQSxJQUFFSSxNQUFNO0VBQzNDLFFBQVFBLE1BQU0sQ0FBQ1AsSUFBSTtJQUNqQixLQUFLLFdBQVc7TUFDZCxJQUFJUSxLQUFLLHNCQUFHRixLQUFLLENBQUNGLFFBQVEscUJBQWQsZ0JBQWdCSyxTQUFTLENBQUMsVUFBQUMsQ0FBQztRQUFBLE9BQUlBLENBQUMsQ0FBQ0MsRUFBRSxJQUFJSixNQUFNLENBQUNOLE9BQU8sQ0FBQ1UsRUFBRTtNQUFBLEVBQUM7TUFDckViLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLE9BQU8sRUFBRVMsS0FBSyxDQUFDO01BQzNCLElBQUlBLEtBQUssSUFBSSxDQUFDLENBQUMsRUFBRTtRQUNmLHlCQUNLRixLQUFLO1VBQ1JGLFFBQVEsNkNBQU1FLEtBQUssQ0FBQ0YsUUFBUSxJQUFFRyxNQUFNLENBQUNOLE9BQU87UUFBQztNQUVqRCxDQUFDLE1BQU07UUFDTCxPQUFPLElBQUFXLDJCQUFNLEVBQUNOLEtBQUssRUFBRTtVQUNuQkYsUUFBUSxvQ0FDTEksS0FBSyxFQUFHO1lBQUNLLElBQUksRUFBRU4sTUFBTSxDQUFDTjtVQUFPLENBQUM7UUFFbkMsQ0FBQyxDQUFDO01BQ0o7SUFFRixLQUFLLGFBQWE7TUFDaEIsSUFBSWEsT0FBTyx1QkFBR1IsS0FBSyxDQUFDRixRQUFRLHFCQUFkLGlCQUFnQlcsTUFBTSxDQUFDLFVBQUFMLENBQUM7UUFBQSxPQUFJQSxDQUFDLENBQUNDLEVBQUUsS0FBS0osTUFBTSxDQUFDTixPQUFPLENBQUNVLEVBQUU7TUFBQSxFQUFDO01BQ3JFLHlCQUNLTCxLQUFLO1FBQ1JGLFFBQVEsRUFBR1U7TUFBTztJQUd0QjtNQUNFLE9BQU9SLEtBQUs7RUFBQztBQUVuQixDQUFDO0FBQUMsZUFFYUQsT0FBTztBQUFBIn0=