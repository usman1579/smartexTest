037ef7b0b101468a9a179201e6e2d1fb
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _reactNative2 = require("@testing-library/react-native");
var _Header = _interopRequireDefault(require("../Header"));
var _enzyme = require("enzyme");
var _jsxRuntime = require("react/jsx-runtime");
describe('Header', function () {
  it('renders correctly on Menu Header', function () {
    var _render = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Lista de tarefas",
        detail: false
      })),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;
    expect(getByText('Lista de tarefas')).toBeTruthy();
    expect(getByTestId('menu-icon')).toBeTruthy();
  });
  it('Header render Add Item', function () {
    var _render2 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Add Item",
        detail: true,
        id: null
      })),
      getByText = _render2.getByText,
      getByTestId = _render2.getByTestId;
    expect(getByText('Add Item')).toBeTruthy();
    expect(getByTestId('chevron-back-outline')).toBeTruthy();
  });
  it('Header render Edit Item', function () {
    var _render3 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Edit Item",
        detail: true,
        id: '123'
      })),
      getByText = _render3.getByText,
      getByTestId = _render3.getByTestId;
    expect(getByText('Edit Item')).toBeTruthy();
    expect(getByTestId('chevron-back-outline')).toBeTruthy();
    expect(getByTestId('trash-outline')).toBeTruthy();
  });
  it('calls onPress prop when menu icon is pressed', function () {
    var onPress = jest.fn();
    var _render4 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test Title",
        onPress: onPress
      })),
      getByTestId = _render4.getByTestId;
    _reactNative2.fireEvent.press(getByTestId('menu-icon'));
    expect(onPress).toHaveBeenCalled();
  });
  it('calls onPressDelete prop when delete icon is pressed', function () {
    var onPressDelete = jest.fn();
    var _render5 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test Title",
        id: '123',
        onPressDelete: onPressDelete
      })),
      getByTestId = _render5.getByTestId;
    _reactNative2.fireEvent.press(getByTestId('trash-outline'));
    expect(onPressDelete).toHaveBeenCalled();
  });
  it('renders the correct icon when detail prop is true', function () {
    var _render6 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_Header.default, {
        title: "Test Title",
        detail: true,
        id: null
      })),
      getByTestId = _render6.getByTestId;
    expect(getByTestId('chevron-back-outline')).toBe('chevron-back-outline');
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,