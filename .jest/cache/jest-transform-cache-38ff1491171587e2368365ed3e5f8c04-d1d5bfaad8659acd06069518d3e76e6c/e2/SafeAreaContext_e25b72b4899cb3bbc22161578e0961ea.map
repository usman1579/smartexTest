{"version":3,"mappings":"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","names":["isDev","process","env","NODE_ENV","SafeAreaInsetsContext","React","createContext","displayName","SafeAreaFrameContext","SafeAreaProvider","children","_ref","initialMetrics","initialSafeAreaInsets","style","others","parentInsets","useParentSafeAreaInsets","parentFrame","useParentSafeAreaFrame","useState","insets","setInsets","frame","x","y","width","Dimensions","get","height","setFrame","onInsetsChange","useCallback","event","nativeEvent","nextFrame","nextInsets","bottom","left","right","top","_NativeSafeAreaProvider","styles","fill","Provider","value","StyleSheet","create","flex","useContext","NO_INSETS_ERROR","useSafeAreaInsets","safeArea","Error","useSafeAreaFrame","withSafeAreaInsets","WrappedComponent","forwardRef","props","ref","Consumer","useSafeArea","SafeAreaConsumer","SafeAreaContext"],"sources":["SafeAreaContext.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Dimensions, StyleSheet, ViewProps } from 'react-native';\nimport { NativeSafeAreaProvider } from './NativeSafeAreaProvider';\nimport type {\n  EdgeInsets,\n  InsetChangedEvent,\n  Metrics,\n  Rect,\n} from './SafeArea.types';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nexport const SafeAreaInsetsContext = React.createContext<EdgeInsets | null>(\n  null,\n);\nif (isDev) {\n  SafeAreaInsetsContext.displayName = 'SafeAreaInsetsContext';\n}\n\nexport const SafeAreaFrameContext = React.createContext<Rect | null>(null);\nif (isDev) {\n  SafeAreaFrameContext.displayName = 'SafeAreaFrameContext';\n}\n\nexport interface SafeAreaProviderProps extends ViewProps {\n  children?: React.ReactNode;\n  initialMetrics?: Metrics | null;\n  /**\n   * @deprecated\n   */\n  initialSafeAreaInsets?: EdgeInsets | null;\n}\n\nexport function SafeAreaProvider({\n  children,\n  initialMetrics,\n  initialSafeAreaInsets,\n  style,\n  ...others\n}: SafeAreaProviderProps) {\n  const parentInsets = useParentSafeAreaInsets();\n  const parentFrame = useParentSafeAreaFrame();\n  const [insets, setInsets] = React.useState<EdgeInsets | null>(\n    initialMetrics?.insets ?? initialSafeAreaInsets ?? parentInsets ?? null,\n  );\n  const [frame, setFrame] = React.useState<Rect>(\n    initialMetrics?.frame ??\n      parentFrame ?? {\n        // Backwards compat so we render anyway if we don't have frame.\n        x: 0,\n        y: 0,\n        width: Dimensions.get('window').width,\n        height: Dimensions.get('window').height,\n      },\n  );\n  const onInsetsChange = React.useCallback(\n    (event: InsetChangedEvent) => {\n      const {\n        nativeEvent: { frame: nextFrame, insets: nextInsets },\n      } = event;\n\n      if (\n        // Backwards compat with old native code that won't send frame.\n        nextFrame &&\n        (nextFrame.height !== frame.height ||\n          nextFrame.width !== frame.width ||\n          nextFrame.x !== frame.x ||\n          nextFrame.y !== frame.y)\n      ) {\n        setFrame(nextFrame);\n      }\n\n      if (\n        !insets ||\n        nextInsets.bottom !== insets.bottom ||\n        nextInsets.left !== insets.left ||\n        nextInsets.right !== insets.right ||\n        nextInsets.top !== insets.top\n      ) {\n        setInsets(nextInsets);\n      }\n    },\n    [frame, insets],\n  );\n\n  return (\n    <NativeSafeAreaProvider\n      style={[styles.fill, style]}\n      onInsetsChange={onInsetsChange}\n      {...others}\n    >\n      {insets != null ? (\n        <SafeAreaFrameContext.Provider value={frame}>\n          <SafeAreaInsetsContext.Provider value={insets}>\n            {children}\n          </SafeAreaInsetsContext.Provider>\n        </SafeAreaFrameContext.Provider>\n      ) : null}\n    </NativeSafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  fill: { flex: 1 },\n});\n\nfunction useParentSafeAreaInsets(): EdgeInsets | null {\n  return React.useContext(SafeAreaInsetsContext);\n}\n\nfunction useParentSafeAreaFrame(): Rect | null {\n  return React.useContext(SafeAreaFrameContext);\n}\n\nconst NO_INSETS_ERROR =\n  'No safe area value available. Make sure you are rendering `<SafeAreaProvider>` at the top of your app.';\n\nexport function useSafeAreaInsets(): EdgeInsets {\n  const safeArea = React.useContext(SafeAreaInsetsContext);\n  if (safeArea == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return safeArea;\n}\n\nexport function useSafeAreaFrame(): Rect {\n  const frame = React.useContext(SafeAreaFrameContext);\n  if (frame == null) {\n    throw new Error(NO_INSETS_ERROR);\n  }\n  return frame;\n}\n\nexport type WithSafeAreaInsetsProps = {\n  insets: EdgeInsets;\n};\n\nexport function withSafeAreaInsets<T>(\n  WrappedComponent: React.ComponentType<T & WithSafeAreaInsetsProps>,\n): React.ForwardRefExoticComponent<\n  React.PropsWithoutRef<T> & React.RefAttributes<unknown>\n> {\n  return React.forwardRef((props: T, ref: React.Ref<unknown>) => (\n    <SafeAreaInsetsContext.Consumer>\n      {(insets) => {\n        if (insets == null) {\n          throw new Error(NO_INSETS_ERROR);\n        }\n        return <WrappedComponent {...props} insets={insets} ref={ref} />;\n      }}\n    </SafeAreaInsetsContext.Consumer>\n  ));\n}\n\n/**\n * @deprecated\n */\nexport function useSafeArea(): EdgeInsets {\n  return useSafeAreaInsets();\n}\n\n/**\n * @deprecated\n */\nexport const SafeAreaConsumer = SafeAreaInsetsContext.Consumer;\n\n/**\n * @deprecated\n */\nexport const SafeAreaContext = SafeAreaInsetsContext;\n"]}