{"version":3,"names":["flattenStyle","require","NativeAnimatedHelper","AnimatedNode","AnimatedTransform","AnimatedWithChildren","AnimatedStyle","style","transform","_style","initialStyle","updatedStyle","key","value","__isNative","__getValue","hasOwnProperty","Array","isArray","_walkStyleAndGetValues","__getAnimatedValue","_walkStyleAndGetAnimatedValues","__addChild","__removeChild","platformConfig","__makeNative","styleConfig","styleKey","__getPlatformConfig","__getNativeTag","validateStyles","type","module","exports"],"sources":["AnimatedStyle.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nconst flattenStyle = require('../../StyleSheet/flattenStyle');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedTransform = require('./AnimatedTransform');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nclass AnimatedStyle extends AnimatedWithChildren {\n  _style: Object;\n\n  constructor(style: any) {\n    super();\n    style = flattenStyle(style) || ({}: {[string]: any});\n    if (style.transform) {\n      style = {\n        ...style,\n        transform: new AnimatedTransform(style.transform),\n      };\n    }\n    this._style = style;\n  }\n\n  // Recursively get values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetValues(style: any, initialStyle: ?Object) {\n    const updatedStyle: {[string]: any | {...}} = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        // During initial render we want to use the initial value of both natively and non-natively\n        // driven nodes. On subsequent renders, we cannot use the value of natively driven nodes\n        // as they may not be up to date, so we use the initial value to ensure that values of\n        // native animated nodes do not impact rerenders.\n        if (!initialStyle || !value.__isNative) {\n          updatedStyle[key] = value.__getValue();\n        } else if (initialStyle.hasOwnProperty(key)) {\n          updatedStyle[key] = initialStyle[key];\n        }\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetValues(value, initialStyle);\n      } else {\n        updatedStyle[key] = value;\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getValue(initialStyle: ?Object): Object {\n    return this._walkStyleAndGetValues(this._style, initialStyle);\n  }\n\n  // Recursively get animated values for nested styles (like iOS's shadowOffset)\n  _walkStyleAndGetAnimatedValues(style: any) {\n    const updatedStyle: {[string]: any | {...}} = {};\n    for (const key in style) {\n      const value = style[key];\n      if (value instanceof AnimatedNode) {\n        updatedStyle[key] = value.__getAnimatedValue();\n      } else if (value && !Array.isArray(value) && typeof value === 'object') {\n        // Support animating nested values (for example: shadowOffset.height)\n        updatedStyle[key] = this._walkStyleAndGetAnimatedValues(value);\n      }\n    }\n    return updatedStyle;\n  }\n\n  __getAnimatedValue(): Object {\n    return this._walkStyleAndGetAnimatedValues(this._style);\n  }\n\n  __attach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    for (const key in this._style) {\n      const value = this._style[key];\n      if (value instanceof AnimatedNode) {\n        value.__makeNative(platformConfig);\n      }\n    }\n    super.__makeNative(platformConfig);\n  }\n\n  __getNativeConfig(): Object {\n    const styleConfig: {[string]: ?number} = {};\n    for (const styleKey in this._style) {\n      if (this._style[styleKey] instanceof AnimatedNode) {\n        const style = this._style[styleKey];\n        style.__makeNative(this.__getPlatformConfig());\n        styleConfig[styleKey] = style.__getNativeTag();\n      }\n      // Non-animated styles are set using `setNativeProps`, no need\n      // to pass those as a part of the node config\n    }\n    NativeAnimatedHelper.validateStyles(styleConfig);\n    return {\n      type: 'style',\n      style: styleConfig,\n    };\n  }\n}\n\nmodule.exports = AnimatedStyle;\n"],"mappings":"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"}