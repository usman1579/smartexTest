4159e908017faaf6a03763b66c356563
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _codegenNativeCommands = _interopRequireDefault(require("../../Utilities/codegenNativeCommands"));
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
var _default = (0, _codegenNativeCommands.default)({
  supportedCommands: ['flashScrollIndicators', 'scrollTo', 'scrollToEnd', 'zoomToRect']
});
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb2RlZ2VuTmF0aXZlQ29tbWFuZHMiLCJzdXBwb3J0ZWRDb21tYW5kcyJdLCJzb3VyY2VzIjpbIlNjcm9sbFZpZXdDb21tYW5kcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3cgc3RyaWN0LWxvY2FsXG4gKi9cblxuaW1wb3J0IGNvZGVnZW5OYXRpdmVDb21tYW5kcyBmcm9tICcuLi8uLi9VdGlsaXRpZXMvY29kZWdlbk5hdGl2ZUNvbW1hbmRzJztcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB0eXBlIHtEb3VibGV9IGZyb20gJ3JlYWN0LW5hdGl2ZS9MaWJyYXJpZXMvVHlwZXMvQ29kZWdlblR5cGVzJztcblxuaW1wb3J0IHR5cGUge0hvc3RDb21wb25lbnR9IGZyb20gJy4uLy4uL1JlbmRlcmVyL3NoaW1zL1JlYWN0TmF0aXZlVHlwZXMnO1xuXG50eXBlIFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlID0gSG9zdENvbXBvbmVudDxtaXhlZD47XG5pbnRlcmZhY2UgTmF0aXZlQ29tbWFuZHMge1xuICArZmxhc2hTY3JvbGxJbmRpY2F0b3JzOiAoXG4gICAgdmlld1JlZjogUmVhY3QuRWxlbWVudFJlZjxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50VHlwZT4sXG4gICkgPT4gdm9pZDtcbiAgK3Njcm9sbFRvOiAoXG4gICAgdmlld1JlZjogUmVhY3QuRWxlbWVudFJlZjxTY3JvbGxWaWV3TmF0aXZlQ29tcG9uZW50VHlwZT4sXG4gICAgeDogRG91YmxlLFxuICAgIHk6IERvdWJsZSxcbiAgICBhbmltYXRlZDogYm9vbGVhbixcbiAgKSA9PiB2b2lkO1xuICArc2Nyb2xsVG9FbmQ6IChcbiAgICB2aWV3UmVmOiBSZWFjdC5FbGVtZW50UmVmPFNjcm9sbFZpZXdOYXRpdmVDb21wb25lbnRUeXBlPixcbiAgICBhbmltYXRlZDogYm9vbGVhbixcbiAgKSA9PiB2b2lkO1xuICArem9vbVRvUmVjdDogKFxuICAgIHZpZXdSZWY6IFJlYWN0LkVsZW1lbnRSZWY8U2Nyb2xsVmlld05hdGl2ZUNvbXBvbmVudFR5cGU+LFxuICAgIHJlY3Q6IHt8XG4gICAgICB4OiBEb3VibGUsXG4gICAgICB5OiBEb3VibGUsXG4gICAgICB3aWR0aDogRG91YmxlLFxuICAgICAgaGVpZ2h0OiBEb3VibGUsXG4gICAgICBhbmltYXRlZD86IGJvb2xlYW4sXG4gICAgfH0sXG4gICAgYW5pbWF0ZWQ/OiBib29sZWFuLFxuICApID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IChjb2RlZ2VuTmF0aXZlQ29tbWFuZHM8TmF0aXZlQ29tbWFuZHM+KHtcbiAgc3VwcG9ydGVkQ29tbWFuZHM6IFtcbiAgICAnZmxhc2hTY3JvbGxJbmRpY2F0b3JzJyxcbiAgICAnc2Nyb2xsVG8nLFxuICAgICdzY3JvbGxUb0VuZCcsXG4gICAgJ3pvb21Ub1JlY3QnLFxuICBdLFxufSk6IE5hdGl2ZUNvbW1hbmRzKTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFVQTtBQUNBO0FBQStCO0FBQUE7QUFBQSxlQWlDZixJQUFBQSw4QkFBcUIsRUFBaUI7RUFDcERDLGlCQUFpQixFQUFFLENBQ2pCLHVCQUF1QixFQUN2QixVQUFVLEVBQ1YsYUFBYSxFQUNiLFlBQVk7QUFFaEIsQ0FBQyxDQUFDO0FBQUEifQ==