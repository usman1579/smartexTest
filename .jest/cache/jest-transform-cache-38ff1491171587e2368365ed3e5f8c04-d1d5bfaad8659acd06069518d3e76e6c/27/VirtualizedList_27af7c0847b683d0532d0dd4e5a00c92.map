{"version":3,"names":["RefreshControl","require","ScrollView","View","Batchinator","ReactNative","flattenStyle","StyleSheet","infoLog","FillRateHelper","ViewabilityHelper","invariant","ON_END_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","horizontalOrDefault","horizontal","initialNumToRenderOrDefault","initialNumToRender","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","onEndReachedThresholdOrDefault","onEndReachedThreshold","scrollEventThrottleOrDefault","scrollEventThrottle","windowSizeOrDefault","windowSize","VirtualizedList","props","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_getNestedChildState","key","existingChildData","_nestedChildLists","get","state","_registerAsNestedChild","childList","childListsInCell","_cellKeysToChildListKeys","cellKey","Set","add","set","ref","console","error","describeNestedLists","_hasInteracted","recordInteraction","_unregisterAsNestedChild","_onUpdateSeparators","keys","newProps","forEach","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_averageCellLength","Map","_frames","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_highestMeasuredFrameIndex","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","offset","timestamp","velocity","visibleLength","zoomScale","_scrollRef","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellLayout","e","index","layout","nativeEvent","next","_selectOffset","length","_selectLength","inLayout","curr","Math","max","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","data","_onCellUnmount","_onLayout","measureLayoutRelativeToContainingList","onLayout","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","contentOffset","scrollToIndex","animated","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","perf","prevDt","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","getItemCount","_onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","distanceFromEnd","abs","Number","EPSILON","computeWindowedRenderLimits","__getFrameMetricsApprox","renderAhead","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","getItem","item","_keyExtractor","frame","_getFrameMetrics","getItemLayout","__isNative","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","storedState","getNestedChildState","_getListKey","frames","params","veryLast","scrollTo","warn","x","y","onScrollToIndexFailed","viewOffset","viewPosition","averageItemLength","highestMeasuredFrameIndex","itemCount","t","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","listKey","_getCellKey","parent","debugInfo","registerAsNestedChild","parentDebugInfo","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","has","undefined","disableVirtualization","nestedContext","keyExtractor","defaultKeyExtractor","String","type","displayName","__DEV__","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","React","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","invertStickyHeaders","innerRet","getScrollMetrics","_getDebugInfo","renderScrollComponent","ret","scrollContext","nesting","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","threshold","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","contextType","VirtualizedListContext","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onCellLayout","onUnmount","createElement","separators","fillRateHelper","_renderElement","enabled","itemSeparator","cellStyle","rowReverse","columnReverse","row","result","Component","trace","create","transform","scaleY","scaleX","flexDirection","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {ScrollResponderType} from '../Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {LayoutEvent, ScrollEvent} from '../Types/CoreEventTypes';\nimport type {\n  ViewabilityConfig,\n  ViewabilityConfigCallbackPair,\n  ViewToken,\n} from './ViewabilityHelper';\n\nimport {\n  type ChildListState,\n  type ListDebugInfo,\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport * as React from 'react';\n\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst View = require('../Components/View/View');\nconst Batchinator = require('../Interaction/Batchinator');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst infoLog = require('../Utilities/infoLog');\nconst FillRateHelper = require('./FillRateHelper');\nconst ViewabilityHelper = require('./ViewabilityHelper');\nconst invariant = require('invariant');\n\nconst ON_END_REACHED_EPSILON = 0.001;\n\ntype Item = any;\n\nexport type Separators = {\n  highlight: () => void,\n  unhighlight: () => void,\n  updateProps: (select: 'leading' | 'trailing', newProps: Object) => void,\n  ...\n};\n\nexport type RenderItemProps<ItemT> = {\n  item: ItemT,\n  index: number,\n  separators: Separators,\n  ...\n};\n\nexport type RenderItemType<ItemT> = (\n  info: RenderItemProps<ItemT>,\n) => React.Node;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype RequiredProps = {|\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n|};\ntype OptionalProps = {|\n  renderItem?: ?RenderItemType<Item>,\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes. Defaults to false.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  // e.g. height, y\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender?: ?number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor?: ?(item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered in between each item, but not at the top or bottom. By default, `highlighted` and\n   * `leadingItem` props are provided. `renderItem` provides `separators.highlight`/`unhighlight`\n   * which will update the `highlighted` prop, but you can also add custom props with\n   * `separators.updateProps`.\n   */\n  ItemSeparatorComponent?: ?React.ComponentType<any>,\n  /**\n   * Takes an item from `data` and renders it into the list. Example usage:\n   *\n   *     <FlatList\n   *       ItemSeparatorComponent={Platform.OS !== 'android' && ({highlighted}) => (\n   *         <View style={[style.separator, highlighted && {marginLeft: 0}]} />\n   *       )}\n   *       data={[{title: 'Title Text', key: 'item1'}]}\n   *       ListItemComponent={({item, separators}) => (\n   *         <TouchableHighlight\n   *           onPress={() => this._onPress(item)}\n   *           onShowUnderlay={separators.highlight}\n   *           onHideUnderlay={separators.unhighlight}>\n   *           <View style={{backgroundColor: 'white'}}>\n   *             <Text>{item.title}</Text>\n   *           </View>\n   *         </TouchableHighlight>\n   *       )}\n   *     />\n   *\n   * Provides additional metadata like `index` if you need it, as well as a more generic\n   * `separators.updateProps` function which let's you set whatever props you want to change the\n   * rendering of either the leading separator or trailing separator in case the more common\n   * `highlight` and `unhighlight` (which set the `highlighted: boolean` prop) are insufficient for\n   * your use-case.\n   */\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness may suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch?: ?number,\n  /**\n   * Called once when the scroll position gets within `onEndReachedThreshold` of the rendered\n   * content.\n   */\n  onEndReached?: ?(info: {distanceFromEnd: number, ...}) => void,\n  /**\n   * How far from the end (in units of visible length of the list) the bottom edge of the\n   * list must be from the end of the content to trigger the `onEndReached` callback.\n   * Thus a value of 0.5 will trigger `onEndReached` when the end of the content is\n   * within half the visible length of the list. A value of 0 will not trigger until scrolling\n   * to the very end of the list.\n   */\n  onEndReachedThreshold?: ?number,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?() => void,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n    ...\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod?: ?number,\n  /**\n   * See `ViewabilityHelper` for flow type and further documentation.\n   */\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize?: ?number,\n  /**\n   * The legacy implementation is no longer supported.\n   */\n  legacyImplementation?: empty,\n|};\n\ntype Props = {|\n  ...React.ElementConfig<typeof ScrollView>,\n  ...RequiredProps,\n  ...OptionalProps,\n|};\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype State = {\n  first: number,\n  last: number,\n};\n\n/**\n * Default Props Helper Functions\n * Use the following helper functions for default values\n */\n\n// horizontalOrDefault(this.props.horizontal)\nfunction horizontalOrDefault(horizontal: ?boolean) {\n  return horizontal ?? false;\n}\n\n// initialNumToRenderOrDefault(this.props.initialNumToRenderOrDefault)\nfunction initialNumToRenderOrDefault(initialNumToRender: ?number) {\n  return initialNumToRender ?? 10;\n}\n\n// maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\nfunction maxToRenderPerBatchOrDefault(maxToRenderPerBatch: ?number) {\n  return maxToRenderPerBatch ?? 10;\n}\n\n// onEndReachedThresholdOrDefault(this.props.onEndReachedThreshold)\nfunction onEndReachedThresholdOrDefault(onEndReachedThreshold: ?number) {\n  return onEndReachedThreshold ?? 2;\n}\n\n// scrollEventThrottleOrDefault(this.props.scrollEventThrottle)\nfunction scrollEventThrottleOrDefault(scrollEventThrottle: ?number) {\n  return scrollEventThrottle ?? 50;\n}\n\n// windowSizeOrDefault(this.props.windowSize)\nfunction windowSizeOrDefault(windowSize: ?number) {\n  return windowSize ?? 21;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this.__getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this.__getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    if (this._scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    this._scrollRef.scrollTo(\n      horizontalOrDefault(this.props.horizontal)\n        ? {x: offset, animated}\n        : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  _getListKey(): string {\n    return this.props.listKey || this._getCellKey();\n  }\n\n  _getDebugInfo(): ListDebugInfo {\n    return {\n      listKey: this._getListKey(),\n      cellKey: this._getCellKey(),\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      parent: this.context?.debugInfo,\n    };\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n    parentDebugInfo: ListDebugInfo,\n    ...\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.\\n\\n' +\n          describeNestedLists({\n            ...childList,\n            // We're called from the child's componentDidMount, so it's safe to\n            // read the child's props here (albeit weird).\n            horizontal: !!childList.ref.props.horizontal,\n          }),\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n    ...\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(props.windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) +\n            initialNumToRenderOrDefault(this.props.initialNumToRender),\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.getNestedChildState(this._getListKey());\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this._getListKey(),\n        ref: this,\n        // NOTE: When the child mounts (here) it's not necessarily safe to read\n        // the parent's props. This is why we explicitly propagate debugInfo\n        // \"down\" via context and \"up\" again via this method call on the\n        // parent.\n        parentDebugInfo: this.context.debugInfo,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({\n        key: this._getListKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    const {data, getItemCount} = newProps;\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      newProps.maxToRenderPerBatch,\n    );\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = this._keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          debug={debug}\n          fillRateHelper={this._fillRateHelper}\n          getItemLayout={getItemLayout}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onCellLayout={this._onCellLayout}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  _keyExtractor(item: Item, index: number) {\n    if (this.props.keyExtractor != null) {\n      return this.props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n      }\n    }\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : initialNumToRenderOrDefault(this.props.initialNumToRender) - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this.__getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this.__getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this.__getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this.__getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this.__getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this.__getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this.__getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(inversionStyle, element.props.style),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: scrollEventThrottleOrDefault(\n        this.props.scrollEventThrottle,\n      ), // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n    };\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          getNestedChildState: this._getNestedChildState,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n          debugInfo: this._getDebugInfo(),\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null\n            ) {\n              // TODO (T46547044): use React.warn once 16.9 is sync'd: https://github.com/facebook/react/pull/15170\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs: {[string]: null | CellRenderer} = {};\n  _fillRateHelper: FillRateHelper;\n  _frames: {\n    [string]: {\n      inLayout?: boolean,\n      index: number,\n      length: number,\n      offset: number,\n    },\n  } = {};\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {\n      ref: ?VirtualizedList,\n      state: ?ChildListState,\n      ...\n    },\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe[prop-missing] - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (e: LayoutEvent, cellKey: string, index: number): void => {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  };\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._cellKeysToChildListKeys.forEach(childListKeys => {\n              if (childListKeys) {\n                for (let childKey of childListKeys) {\n                  const childList = this._nestedChildLists.get(childKey);\n                  childList &&\n                    childList.ref &&\n                    childList.ref.measureLayoutRelativeToContainingList();\n                }\n              }\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this.__getFrameMetricsApprox(ii);\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the\n       * error delete this comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this.__getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this.__getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset(\n    metrics: $ReadOnly<{\n      x: number,\n      y: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal) ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {data, getItemCount, onEndReached, onEndReachedThreshold} =\n      this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    let distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distanceFromEnd values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the \"end\" of the list with a distanceFromEnd approximating 0 but not quite there.\n    if (distanceFromEnd < ON_END_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2 when oERT is not present\n    const threshold =\n      onEndReachedThreshold != null ? onEndReachedThreshold * visibleLength : 2;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      distanceFromEnd <= threshold &&\n      this._scrollMetrics.contentLength !== this._sentEndForContentLength\n    ) {\n      // Only call onEndReached once for a given content length\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    } else if (distanceFromEnd > threshold) {\n      // If the user scrolls away from the end and back again cause\n      // an onEndReached to be triggered again\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        this.scrollToIndex({\n          animated: false,\n          index: this.props.initialScrollIndex,\n        });\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    const scrollingThreshold = (onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this.__getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this.__getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {\n      data,\n      getItemCount,\n      onEndReachedThreshold: _onEndReachedThreshold,\n    } = this.props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      _onEndReachedThreshold,\n    );\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState: ?(\n        | {first: number, last: number, ...}\n        | $TEMPORARY$object<{first: number, last: number}>\n      );\n      const {contentLength, offset, visibleLength} = this._scrollMetrics;\n      const distanceFromEnd = contentLength - visibleLength - offset;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (visibleLength > 0 && contentLength > 0) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n\n          // Thus, we want to recalculate the windowed render limits if any of the following hold:\n          // - initialScrollIndex is undefined or is 0\n          // - initialScrollIndex > 0 AND scrolling is complete\n          // - initialScrollIndex > 0 AND the end of the list is visible (this handles the case\n          //   where the list is shorter than the visible area)\n          if (\n            !this.props.initialScrollIndex ||\n            this._scrollMetrics.offset ||\n            Math.abs(distanceFromEnd) < Number.EPSILON\n          ) {\n            newState = computeWindowedRenderLimits(\n              this.props.data,\n              this.props.getItemCount,\n              maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch),\n              windowSizeOrDefault(this.props.windowSize),\n              state,\n              this.__getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const renderAhead =\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? maxToRenderPerBatchOrDefault(this.props.maxToRenderPerBatch)\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      if (\n        newState != null &&\n        newState.first === state.first &&\n        newState.last === state.last\n      ) {\n        newState = null;\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: this._keyExtractor(item, index), isViewable};\n  };\n\n  __getFrameMetricsApprox: (index: number) => {\n    length: number,\n    offset: number,\n    ...\n  } = index => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n    ...\n  } => {\n    const {data, getItem, getItemCount, getItemLayout} = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    const frame = item && this._frames[this._keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        /* $FlowFixMe[prop-missing] (>=0.63.0 site=react_native_fb) This comment\n         * suppresses an error found when Flow v0.63 was deployed. To see the error\n         * delete this comment and run Flow. */\n        return getItemLayout(data, index);\n      }\n    }\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\ntype CellRendererProps = {\n  CellRendererComponent?: ?React.ComponentType<any>,\n  ItemSeparatorComponent: ?React.ComponentType<\n    any | {highlighted: boolean, leadingItem: ?Item},\n  >,\n  ListItemComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  cellKey: string,\n  debug?: ?boolean,\n  fillRateHelper: FillRateHelper,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {\n    length: number,\n    offset: number,\n    index: number,\n    ...\n  },\n  horizontal: ?boolean,\n  index: number,\n  inversionStyle: ViewStyleProp,\n  item: Item,\n  // This is extracted by ScrollViewStickyHeader\n  onCellLayout: (event: Object, cellKey: string, index: number) => void,\n  onUnmount: (cellKey: string) => void,\n  onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n  prevCellKey: ?string,\n  renderItem?: ?RenderItemType<Item>,\n  ...\n};\n\ntype CellRendererState = {\n  separatorProps: $ReadOnly<{|\n    highlighted: boolean,\n    leadingItem: ?Item,\n  |}>,\n  ...\n};\n\nclass CellRenderer extends React.Component<\n  CellRendererProps,\n  CellRendererState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static getDerivedStateFromProps(\n    props: CellRendererProps,\n    prevState: CellRendererState,\n  ): ?CellRendererState {\n    return {\n      separatorProps: {\n        ...prevState.separatorProps,\n        leadingItem: props.item,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  _onLayout = (nativeEvent: LayoutEvent): void => {\n    this.props.onCellLayout &&\n      this.props.onCellLayout(\n        nativeEvent,\n        this.props.cellKey,\n        this.props.index,\n      );\n  };\n\n  _renderElement(\n    renderItem: any,\n    ListItemComponent: any,\n    item: any,\n    index: any,\n  ) {\n    if (renderItem && ListItemComponent) {\n      console.warn(\n        'VirtualizedList: Both ListItemComponent and renderItem props are present. ListItemComponent will take' +\n          ' precedence over renderItem.',\n      );\n    }\n\n    if (ListItemComponent) {\n      /* $FlowFixMe[not-a-component] (>=0.108.0 site=react_native_fb) This\n       * comment suppresses an error found when Flow v0.108 was deployed. To\n       * see the error, delete this comment and run Flow. */\n      /* $FlowFixMe[incompatible-type-arg] (>=0.108.0 site=react_native_fb)\n       * This comment suppresses an error found when Flow v0.108 was deployed.\n       * To see the error, delete this comment and run Flow. */\n      return React.createElement(ListItemComponent, {\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    if (renderItem) {\n      return renderItem({\n        item,\n        index,\n        separators: this._separators,\n      });\n    }\n\n    invariant(\n      false,\n      'VirtualizedList: Either ListItemComponent or renderItem props are required but none were found.',\n    );\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListItemComponent,\n      debug,\n      fillRateHelper,\n      getItemLayout,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      renderItem,\n    } = this.props;\n    const element = this._renderElement(\n      renderItem,\n      ListItemComponent,\n      item,\n      index,\n    );\n\n    const onLayout =\n      (getItemLayout && !debug && !fillRateHelper.enabled()) ||\n      !this.props.onCellLayout\n        ? undefined\n        : this._onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = React.isValidElement(ItemSeparatorComponent)\n      ? ItemSeparatorComponent\n      : ItemSeparatorComponent && (\n          <ItemSeparatorComponent {...this.state.separatorProps} />\n        );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [styles.rowReverse, inversionStyle]\n        : [styles.columnReverse, inversionStyle]\n      : horizontal\n      ? [styles.row, inversionStyle]\n      : inversionStyle;\n    const result = !CellRendererComponent ? (\n      /* $FlowFixMe[incompatible-type-arg] (>=0.89.0 site=react_native_fb) *\n        This comment suppresses an error found when Flow v0.89 was deployed. *\n        To see the error, delete this comment and run Flow. */\n      <View style={cellStyle} onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </View>\n    ) : (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n\n    return (\n      <VirtualizedListCellContextProvider cellKey={this.props.cellKey}>\n        {result}\n      </VirtualizedListCellContextProvider>\n    );\n  }\n}\n\nfunction describeNestedLists(childList: {\n  +cellKey: string,\n  +key: string,\n  +ref: VirtualizedList,\n  +parentDebugInfo: ListDebugInfo,\n  +horizontal: boolean,\n  ...\n}) {\n  let trace =\n    'VirtualizedList trace:\\n' +\n    `  Child (${childList.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n    `    listKey: ${childList.key}\\n` +\n    `    cellKey: ${childList.cellKey}`;\n\n  let debugInfo: ?ListDebugInfo = childList.parentDebugInfo;\n  while (debugInfo) {\n    trace +=\n      `\\n  Parent (${debugInfo.horizontal ? 'horizontal' : 'vertical'}):\\n` +\n      `    listKey: ${debugInfo.listKey}\\n` +\n      `    cellKey: ${debugInfo.cellKey}`;\n    debugInfo = debugInfo.parent;\n  }\n  return trace;\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  rowReverse: {\n    flexDirection: 'row-reverse',\n  },\n  columnReverse: {\n    flexDirection: 'column-reverse',\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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"}