{"version":3,"names":["describe","it","render","getByText","getByTestId","expect","toBeTruthy","onPress","jest","fn","props","fireEvent","press","toHaveBeenCalled","navigation","navigate","toHaveBeenCalledWith","item","data","screen","id","name","description","date","Date","button"],"sources":["floatingButton.test.js"],"sourcesContent":["import 'react-native';\nimport React from 'react';\nimport {render, screen, fireEvent} from '@testing-library/react-native';\nimport FloatingButton from '../FloatingButton';\nimport { shallow } from 'enzyme';\n\ndescribe('Floating Button', () => {\n\n    it('renders correctly on Detail Screen', () => {\n      const {getByText, getByTestId} = render(<FloatingButton  />);\n      expect(getByTestId('add')).toBeTruthy();\n    });\n\n    it('calls onPress prop when menu icon is pressed', () => {\n        const onPress = jest.fn();\n        const {getByTestId} = render(<FloatingButton  {...props }onPress={onPress} />);\n        fireEvent.press(getByTestId('add'));\n        expect(onPress).toHaveBeenCalled();\n        expect(props.navigation.navigate).toHaveBeenCalledWith('Detail', {item: data , screen :'Add Item'});\n      });\n  \n     \n        it('calls navigation.navigate when pressed', () => {\n          const data = { id: 1, name: 'Test' , description:'here is description' ,date: new Date() };\n          const navigation = { navigate: jest.fn() };\n          const { getByTestId } = render(\n            <FloatingButton\n              navigation={navigation}\n              onPress={() =>\n                props.navigation.navigate('Detail', { item: data, screen: 'Add Item' })\n              }\n            />\n          );\n          const button = getByTestId('floating-button');\n          button.props.onPress();\n          expect(navigation.navigate).toHaveBeenCalledWith('Detail', {\n            item: data,\n            screen: 'Add Item',\n          });\n        });\n\n  \n});\n\n\n// describe('FloatingButton', () => {\n//     let wrapper, props;\n  \n//     beforeEach(() => {\n//       // Set up mock navigation.navigate function\n//       props = {\n//         navigation: {\n//           navigate: jest.fn()\n//         }\n//       };\n  \n//       // Render the component\n//       wrapper = shallow(<FloatingButton {...props} />);\n//     });\n  \n//     it('should call navigation.navigate with correct arguments when pressed', () => {\n//       // Simulate button press\n//       wrapper.simulate('press');\n  \n//       // Assert that navigation.navigate was called with the correct arguments\n//       expect(props.navigation.navigate).toHaveBeenCalledWith('Detail', {item: data , screen :'Add Item'});\n//     });\n//   });\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAAiC;AAEjCA,QAAQ,CAAC,iBAAiB,EAAE,YAAM;EAE9BC,EAAE,CAAC,oCAAoC,EAAE,YAAM;IAC7C,cAAiC,IAAAC,oBAAM,EAAC,qBAAC,uBAAc,KAAI,CAAC;MAArDC,SAAS,WAATA,SAAS;MAAEC,WAAW,WAAXA,WAAW;IAC7BC,MAAM,CAACD,WAAW,CAAC,KAAK,CAAC,CAAC,CAACE,UAAU,EAAE;EACzC,CAAC,CAAC;EAEFL,EAAE,CAAC,8CAA8C,EAAE,YAAM;IACrD,IAAMM,OAAO,GAAGC,IAAI,CAACC,EAAE,EAAE;IACzB,eAAsB,IAAAP,oBAAM,EAAC,qBAAC,uBAAc,oBAAMQ,KAAK;QAAE,OAAO,EAAEH;MAAQ,GAAG,CAAC;MAAvEH,WAAW,YAAXA,WAAW;IAClBO,uBAAS,CAACC,KAAK,CAACR,WAAW,CAAC,KAAK,CAAC,CAAC;IACnCC,MAAM,CAACE,OAAO,CAAC,CAACM,gBAAgB,EAAE;IAClCR,MAAM,CAACK,KAAK,CAACI,UAAU,CAACC,QAAQ,CAAC,CAACC,oBAAoB,CAAC,QAAQ,EAAE;MAACC,IAAI,EAAEC,IAAI;MAAGC,MAAM,EAAE;IAAU,CAAC,CAAC;EACrG,CAAC,CAAC;EAGAlB,EAAE,CAAC,wCAAwC,EAAE,YAAM;IACjD,IAAMiB,IAAI,GAAG;MAAEE,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAGC,WAAW,EAAC,qBAAqB;MAAEC,IAAI,EAAE,IAAIC,IAAI;IAAG,CAAC;IAC1F,IAAMV,UAAU,GAAG;MAAEC,QAAQ,EAAEP,IAAI,CAACC,EAAE;IAAG,CAAC;IAC1C,eAAwB,IAAAP,oBAAM,EAC5B,qBAAC,uBAAc;QACb,UAAU,EAAEY,UAAW;QACvB,OAAO,EAAE;UAAA,OACPJ,KAAK,CAACI,UAAU,CAACC,QAAQ,CAAC,QAAQ,EAAE;YAAEE,IAAI,EAAEC,IAAI;YAAEC,MAAM,EAAE;UAAW,CAAC,CAAC;QAAA;MACxE,EACD,CACH;MAPOf,WAAW,YAAXA,WAAW;IAQnB,IAAMqB,MAAM,GAAGrB,WAAW,CAAC,iBAAiB,CAAC;IAC7CqB,MAAM,CAACf,KAAK,CAACH,OAAO,EAAE;IACtBF,MAAM,CAACS,UAAU,CAACC,QAAQ,CAAC,CAACC,oBAAoB,CAAC,QAAQ,EAAE;MACzDC,IAAI,EAAEC,IAAI;MACVC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,CAAC;AAGV,CAAC,CAAC"}