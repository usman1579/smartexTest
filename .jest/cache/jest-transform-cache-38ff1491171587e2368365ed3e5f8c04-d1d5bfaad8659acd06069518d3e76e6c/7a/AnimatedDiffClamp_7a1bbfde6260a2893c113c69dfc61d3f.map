{"version":3,"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedWithChildren","AnimatedDiffClamp","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","platformConfig","__makeNative","config","value","diff","Math","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"sources":["AnimatedDiffClamp.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _min: number;\n  _max: number;\n  _value: number;\n  _lastValue: number;\n\n  constructor(a: AnimatedNode, min: number, max: number) {\n    super();\n\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  interpolate<OutputT: number | string>(\n    config: InterpolationConfigType<OutputT>,\n  ): AnimatedInterpolation<OutputT> {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue(): number {\n    const value = this._a.__getValue();\n    const diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max,\n    };\n  }\n}\n\nmodule.exports = AnimatedDiffClamp;\n"],"mappings":"AAUA,YAAY;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAyB,CAAC;AAChE,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC9C,IAAME,oBAAoB,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AAAC,IAKzDG,iBAAiB;EAAA;EAAA;EAOrB,2BAAYC,CAAe,EAAEC,GAAW,EAAEC,GAAW,EAAE;IAAA;IAAA;IACrD;IAEA,MAAKC,EAAE,GAAGH,CAAC;IACX,MAAKI,IAAI,GAAGH,GAAG;IACf,MAAKI,IAAI,GAAGH,GAAG;IACf,MAAKI,MAAM,GAAG,MAAKC,UAAU,GAAG,MAAKJ,EAAE,CAACK,UAAU,EAAE;IAAC;EACvD;EAAC;IAAA;IAAA,OAED,sBAAaC,cAA+B,EAAE;MAC5C,IAAI,CAACN,EAAE,CAACO,YAAY,CAACD,cAAc,CAAC;MACpC,gHAAmBA,cAAc;IACnC;EAAC;IAAA;IAAA,OAED,qBACEE,MAAwC,EACR;MAChC,OAAO,IAAIhB,qBAAqB,CAAC,IAAI,EAAEgB,MAAM,CAAC;IAChD;EAAC;IAAA;IAAA,OAED,sBAAqB;MACnB,IAAMC,KAAK,GAAG,IAAI,CAACT,EAAE,CAACK,UAAU,EAAE;MAClC,IAAMK,IAAI,GAAGD,KAAK,GAAG,IAAI,CAACL,UAAU;MACpC,IAAI,CAACA,UAAU,GAAGK,KAAK;MACvB,IAAI,CAACN,MAAM,GAAGQ,IAAI,CAACb,GAAG,CAACa,IAAI,CAACZ,GAAG,CAAC,IAAI,CAACI,MAAM,GAAGO,IAAI,EAAE,IAAI,CAACT,IAAI,CAAC,EAAE,IAAI,CAACC,IAAI,CAAC;MAC1E,OAAO,IAAI,CAACC,MAAM;IACpB;EAAC;IAAA;IAAA,OAED,oBAAiB;MACf,IAAI,CAACH,EAAE,CAACY,UAAU,CAAC,IAAI,CAAC;IAC1B;EAAC;IAAA;IAAA,OAED,oBAAiB;MACf,IAAI,CAACZ,EAAE,CAACa,aAAa,CAAC,IAAI,CAAC;MAC3B;IACF;EAAC;IAAA;IAAA,OAED,6BAAyB;MACvB,OAAO;QACLC,IAAI,EAAE,WAAW;QACjBC,KAAK,EAAE,IAAI,CAACf,EAAE,CAACgB,cAAc,EAAE;QAC/BlB,GAAG,EAAE,IAAI,CAACG,IAAI;QACdF,GAAG,EAAE,IAAI,CAACG;MACZ,CAAC;IACH;EAAC;EAAA;AAAA,EAnD6BP,oBAAoB;AAsDpDsB,MAAM,CAACC,OAAO,GAAGtB,iBAAiB"}