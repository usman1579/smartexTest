12c7e6a439b311b5b24936d4ea226282
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.processColorObject = exports.normalizeColorObject = exports.PlatformColor = exports.DynamicColorIOSPrivate = void 0;
var PlatformColor = function PlatformColor() {
  for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {
    names[_key] = arguments[_key];
  }
  return {
    semantic: names
  };
};
exports.PlatformColor = PlatformColor;
var DynamicColorIOSPrivate = function DynamicColorIOSPrivate(tuple) {
  return {
    dynamic: {
      light: tuple.light,
      dark: tuple.dark,
      highContrastLight: tuple.highContrastLight,
      highContrastDark: tuple.highContrastDark
    }
  };
};
exports.DynamicColorIOSPrivate = DynamicColorIOSPrivate;
var normalizeColorObject = function normalizeColorObject(color) {
  if ('semantic' in color) {
    return color;
  } else if ('dynamic' in color && color.dynamic !== undefined) {
    var normalizeColor = require('./normalizeColor');
    var dynamic = color.dynamic;
    var dynamicColor = {
      dynamic: {
        light: normalizeColor(dynamic.light),
        dark: normalizeColor(dynamic.dark),
        highContrastLight: normalizeColor(dynamic.highContrastLight),
        highContrastDark: normalizeColor(dynamic.highContrastDark)
      }
    };
    return dynamicColor;
  }
  return null;
};
exports.normalizeColorObject = normalizeColorObject;
var processColorObject = function processColorObject(color) {
  if ('dynamic' in color && color.dynamic != null) {
    var processColor = require('./processColor');
    var dynamic = color.dynamic;
    var dynamicColor = {
      dynamic: {
        light: processColor(dynamic.light),
        dark: processColor(dynamic.dark),
        highContrastLight: processColor(dynamic.highContrastLight),
        highContrastDark: processColor(dynamic.highContrastDark)
      }
    };
    return dynamicColor;
  }
  return color;
};
exports.processColorObject = processColorObject;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQbGF0Zm9ybUNvbG9yIiwibmFtZXMiLCJzZW1hbnRpYyIsIkR5bmFtaWNDb2xvcklPU1ByaXZhdGUiLCJ0dXBsZSIsImR5bmFtaWMiLCJsaWdodCIsImRhcmsiLCJoaWdoQ29udHJhc3RMaWdodCIsImhpZ2hDb250cmFzdERhcmsiLCJub3JtYWxpemVDb2xvck9iamVjdCIsImNvbG9yIiwidW5kZWZpbmVkIiwibm9ybWFsaXplQ29sb3IiLCJyZXF1aXJlIiwiZHluYW1pY0NvbG9yIiwicHJvY2Vzc0NvbG9yT2JqZWN0IiwicHJvY2Vzc0NvbG9yIl0sInNvdXJjZXMiOlsiUGxhdGZvcm1Db2xvclZhbHVlVHlwZXMuaW9zLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqL1xuXG5pbXBvcnQgdHlwZSB7Q29sb3JWYWx1ZX0gZnJvbSAnLi9TdHlsZVNoZWV0JztcbmltcG9ydCB0eXBlIHtQcm9jZXNzZWRDb2xvclZhbHVlfSBmcm9tICcuL3Byb2Nlc3NDb2xvcic7XG5cbmV4cG9ydCBvcGFxdWUgdHlwZSBOYXRpdmVDb2xvclZhbHVlID0ge1xuICBzZW1hbnRpYz86IEFycmF5PHN0cmluZz4sXG4gIGR5bmFtaWM/OiB7XG4gICAgbGlnaHQ6ID8oQ29sb3JWYWx1ZSB8IFByb2Nlc3NlZENvbG9yVmFsdWUpLFxuICAgIGRhcms6ID8oQ29sb3JWYWx1ZSB8IFByb2Nlc3NlZENvbG9yVmFsdWUpLFxuICAgIGhpZ2hDb250cmFzdExpZ2h0PzogPyhDb2xvclZhbHVlIHwgUHJvY2Vzc2VkQ29sb3JWYWx1ZSksXG4gICAgaGlnaENvbnRyYXN0RGFyaz86ID8oQ29sb3JWYWx1ZSB8IFByb2Nlc3NlZENvbG9yVmFsdWUpLFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IFBsYXRmb3JtQ29sb3IgPSAoLi4ubmFtZXM6IEFycmF5PHN0cmluZz4pOiBDb2xvclZhbHVlID0+IHtcbiAgcmV0dXJuIHtzZW1hbnRpYzogbmFtZXN9O1xufTtcblxuZXhwb3J0IHR5cGUgRHluYW1pY0NvbG9ySU9TVHVwbGVQcml2YXRlID0ge1xuICBsaWdodDogQ29sb3JWYWx1ZSxcbiAgZGFyazogQ29sb3JWYWx1ZSxcbiAgaGlnaENvbnRyYXN0TGlnaHQ/OiBDb2xvclZhbHVlLFxuICBoaWdoQ29udHJhc3REYXJrPzogQ29sb3JWYWx1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBEeW5hbWljQ29sb3JJT1NQcml2YXRlID0gKFxuICB0dXBsZTogRHluYW1pY0NvbG9ySU9TVHVwbGVQcml2YXRlLFxuKTogQ29sb3JWYWx1ZSA9PiB7XG4gIHJldHVybiB7XG4gICAgZHluYW1pYzoge1xuICAgICAgbGlnaHQ6IHR1cGxlLmxpZ2h0LFxuICAgICAgZGFyazogdHVwbGUuZGFyayxcbiAgICAgIGhpZ2hDb250cmFzdExpZ2h0OiB0dXBsZS5oaWdoQ29udHJhc3RMaWdodCxcbiAgICAgIGhpZ2hDb250cmFzdERhcms6IHR1cGxlLmhpZ2hDb250cmFzdERhcmssXG4gICAgfSxcbiAgfTtcbn07XG5cbmV4cG9ydCBjb25zdCBub3JtYWxpemVDb2xvck9iamVjdCA9IChcbiAgY29sb3I6IE5hdGl2ZUNvbG9yVmFsdWUsXG4pOiA/UHJvY2Vzc2VkQ29sb3JWYWx1ZSA9PiB7XG4gIGlmICgnc2VtYW50aWMnIGluIGNvbG9yKSB7XG4gICAgLy8gYW4gaW9zIHNlbWFudGljIGNvbG9yXG4gICAgcmV0dXJuIGNvbG9yO1xuICB9IGVsc2UgaWYgKCdkeW5hbWljJyBpbiBjb2xvciAmJiBjb2xvci5keW5hbWljICE9PSB1bmRlZmluZWQpIHtcbiAgICBjb25zdCBub3JtYWxpemVDb2xvciA9IHJlcXVpcmUoJy4vbm9ybWFsaXplQ29sb3InKTtcblxuICAgIC8vIGEgZHluYW1pYywgYXBwZWFyYW5jZSBhd2FyZSBjb2xvclxuICAgIGNvbnN0IGR5bmFtaWMgPSBjb2xvci5keW5hbWljO1xuICAgIGNvbnN0IGR5bmFtaWNDb2xvcjogTmF0aXZlQ29sb3JWYWx1ZSA9IHtcbiAgICAgIGR5bmFtaWM6IHtcbiAgICAgICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdXNlXVxuICAgICAgICBsaWdodDogbm9ybWFsaXplQ29sb3IoZHluYW1pYy5saWdodCksXG4gICAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXVzZV1cbiAgICAgICAgZGFyazogbm9ybWFsaXplQ29sb3IoZHluYW1pYy5kYXJrKSxcbiAgICAgICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdXNlXVxuICAgICAgICBoaWdoQ29udHJhc3RMaWdodDogbm9ybWFsaXplQ29sb3IoZHluYW1pYy5oaWdoQ29udHJhc3RMaWdodCksXG4gICAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXVzZV1cbiAgICAgICAgaGlnaENvbnRyYXN0RGFyazogbm9ybWFsaXplQ29sb3IoZHluYW1pYy5oaWdoQ29udHJhc3REYXJrKSxcbiAgICAgIH0sXG4gICAgfTtcbiAgICByZXR1cm4gZHluYW1pY0NvbG9yO1xuICB9XG5cbiAgcmV0dXJuIG51bGw7XG59O1xuXG5leHBvcnQgY29uc3QgcHJvY2Vzc0NvbG9yT2JqZWN0ID0gKFxuICBjb2xvcjogTmF0aXZlQ29sb3JWYWx1ZSxcbik6ID9OYXRpdmVDb2xvclZhbHVlID0+IHtcbiAgaWYgKCdkeW5hbWljJyBpbiBjb2xvciAmJiBjb2xvci5keW5hbWljICE9IG51bGwpIHtcbiAgICBjb25zdCBwcm9jZXNzQ29sb3IgPSByZXF1aXJlKCcuL3Byb2Nlc3NDb2xvcicpO1xuICAgIGNvbnN0IGR5bmFtaWMgPSBjb2xvci5keW5hbWljO1xuICAgIGNvbnN0IGR5bmFtaWNDb2xvcjogTmF0aXZlQ29sb3JWYWx1ZSA9IHtcbiAgICAgIGR5bmFtaWM6IHtcbiAgICAgICAgLy8gJEZsb3dGaXhNZVtpbmNvbXBhdGlibGUtdXNlXVxuICAgICAgICBsaWdodDogcHJvY2Vzc0NvbG9yKGR5bmFtaWMubGlnaHQpLFxuICAgICAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS11c2VdXG4gICAgICAgIGRhcms6IHByb2Nlc3NDb2xvcihkeW5hbWljLmRhcmspLFxuICAgICAgICAvLyAkRmxvd0ZpeE1lW2luY29tcGF0aWJsZS11c2VdXG4gICAgICAgIGhpZ2hDb250cmFzdExpZ2h0OiBwcm9jZXNzQ29sb3IoZHluYW1pYy5oaWdoQ29udHJhc3RMaWdodCksXG4gICAgICAgIC8vICRGbG93Rml4TWVbaW5jb21wYXRpYmxlLXVzZV1cbiAgICAgICAgaGlnaENvbnRyYXN0RGFyazogcHJvY2Vzc0NvbG9yKGR5bmFtaWMuaGlnaENvbnRyYXN0RGFyayksXG4gICAgICB9LFxuICAgIH07XG4gICAgcmV0dXJuIGR5bmFtaWNDb2xvcjtcbiAgfVxuICByZXR1cm4gY29sb3I7XG59O1xuIl0sIm1hcHBpbmdzIjoiOzs7O0FBdUJPLElBQU1BLGFBQWEsR0FBRyxTQUFoQkEsYUFBYSxHQUE0QztFQUFBLGtDQUFyQ0MsS0FBSztJQUFMQSxLQUFLO0VBQUE7RUFDcEMsT0FBTztJQUFDQyxRQUFRLEVBQUVEO0VBQUssQ0FBQztBQUMxQixDQUFDO0FBQUM7QUFTSyxJQUFNRSxzQkFBc0IsR0FBRyxTQUF6QkEsc0JBQXNCLENBQ2pDQyxLQUFrQyxFQUNuQjtFQUNmLE9BQU87SUFDTEMsT0FBTyxFQUFFO01BQ1BDLEtBQUssRUFBRUYsS0FBSyxDQUFDRSxLQUFLO01BQ2xCQyxJQUFJLEVBQUVILEtBQUssQ0FBQ0csSUFBSTtNQUNoQkMsaUJBQWlCLEVBQUVKLEtBQUssQ0FBQ0ksaUJBQWlCO01BQzFDQyxnQkFBZ0IsRUFBRUwsS0FBSyxDQUFDSztJQUMxQjtFQUNGLENBQUM7QUFDSCxDQUFDO0FBQUM7QUFFSyxJQUFNQyxvQkFBb0IsR0FBRyxTQUF2QkEsb0JBQW9CLENBQy9CQyxLQUF1QixFQUNFO0VBQ3pCLElBQUksVUFBVSxJQUFJQSxLQUFLLEVBQUU7SUFFdkIsT0FBT0EsS0FBSztFQUNkLENBQUMsTUFBTSxJQUFJLFNBQVMsSUFBSUEsS0FBSyxJQUFJQSxLQUFLLENBQUNOLE9BQU8sS0FBS08sU0FBUyxFQUFFO0lBQzVELElBQU1DLGNBQWMsR0FBR0MsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0lBR2xELElBQU1ULE9BQU8sR0FBR00sS0FBSyxDQUFDTixPQUFPO0lBQzdCLElBQU1VLFlBQThCLEdBQUc7TUFDckNWLE9BQU8sRUFBRTtRQUVQQyxLQUFLLEVBQUVPLGNBQWMsQ0FBQ1IsT0FBTyxDQUFDQyxLQUFLLENBQUM7UUFFcENDLElBQUksRUFBRU0sY0FBYyxDQUFDUixPQUFPLENBQUNFLElBQUksQ0FBQztRQUVsQ0MsaUJBQWlCLEVBQUVLLGNBQWMsQ0FBQ1IsT0FBTyxDQUFDRyxpQkFBaUIsQ0FBQztRQUU1REMsZ0JBQWdCLEVBQUVJLGNBQWMsQ0FBQ1IsT0FBTyxDQUFDSSxnQkFBZ0I7TUFDM0Q7SUFDRixDQUFDO0lBQ0QsT0FBT00sWUFBWTtFQUNyQjtFQUVBLE9BQU8sSUFBSTtBQUNiLENBQUM7QUFBQztBQUVLLElBQU1DLGtCQUFrQixHQUFHLFNBQXJCQSxrQkFBa0IsQ0FDN0JMLEtBQXVCLEVBQ0Q7RUFDdEIsSUFBSSxTQUFTLElBQUlBLEtBQUssSUFBSUEsS0FBSyxDQUFDTixPQUFPLElBQUksSUFBSSxFQUFFO0lBQy9DLElBQU1ZLFlBQVksR0FBR0gsT0FBTyxDQUFDLGdCQUFnQixDQUFDO0lBQzlDLElBQU1ULE9BQU8sR0FBR00sS0FBSyxDQUFDTixPQUFPO0lBQzdCLElBQU1VLFlBQThCLEdBQUc7TUFDckNWLE9BQU8sRUFBRTtRQUVQQyxLQUFLLEVBQUVXLFlBQVksQ0FBQ1osT0FBTyxDQUFDQyxLQUFLLENBQUM7UUFFbENDLElBQUksRUFBRVUsWUFBWSxDQUFDWixPQUFPLENBQUNFLElBQUksQ0FBQztRQUVoQ0MsaUJBQWlCLEVBQUVTLFlBQVksQ0FBQ1osT0FBTyxDQUFDRyxpQkFBaUIsQ0FBQztRQUUxREMsZ0JBQWdCLEVBQUVRLFlBQVksQ0FBQ1osT0FBTyxDQUFDSSxnQkFBZ0I7TUFDekQ7SUFDRixDQUFDO0lBQ0QsT0FBT00sWUFBWTtFQUNyQjtFQUNBLE9BQU9KLEtBQUs7QUFDZCxDQUFDO0FBQUMifQ==