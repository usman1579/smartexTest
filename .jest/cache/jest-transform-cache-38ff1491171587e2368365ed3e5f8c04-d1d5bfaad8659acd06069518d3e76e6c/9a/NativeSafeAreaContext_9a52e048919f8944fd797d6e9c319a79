0ab1cb19c7387931c65275242ccb78e1
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var TurboModuleRegistry = _interopRequireWildcard(require("react-native/Libraries/TurboModule/TurboModuleRegistry"));
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var _default = TurboModuleRegistry.get('RNCSafeAreaContext');
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7ZUFxQmVBLG1CQUFtQixDQUFDQyxHQUFwQixDQUE4QixvQkFBOUIsQyIsIm5hbWVzIjpbIlR1cmJvTW9kdWxlUmVnaXN0cnkiLCJnZXQiXSwic291cmNlcyI6WyJOYXRpdmVTYWZlQXJlYUNvbnRleHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUgeyBEb3VibGUgfSBmcm9tICdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL1R5cGVzL0NvZGVnZW5UeXBlcyc7XG4vLyBAdHMtZXhwZWN0LWVycm9yOiBtaXNzaW5nIHR5cGUgZGVmaW5pdGlvbiBmb3IgbW9kdWxlXG5pbXBvcnQgdHlwZSB7IFR1cmJvTW9kdWxlIH0gZnJvbSAncmVhY3QtbmF0aXZlL0xpYnJhcmllcy9UdXJib01vZHVsZS9SQ1RFeHBvcnQnO1xuLy8gQHRzLWV4cGVjdC1lcnJvcjogbWlzc2luZyB0eXBlIGRlZmluaXRpb24gZm9yIG1vZHVsZVxuaW1wb3J0ICogYXMgVHVyYm9Nb2R1bGVSZWdpc3RyeSBmcm9tICdyZWFjdC1uYXRpdmUvTGlicmFyaWVzL1R1cmJvTW9kdWxlL1R1cmJvTW9kdWxlUmVnaXN0cnknO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWMgZXh0ZW5kcyBUdXJib01vZHVsZSB7XG4gIGdldENvbnN0YW50czogKCkgPT4ge1xuICAgIGluaXRpYWxXaW5kb3dNZXRyaWNzPzoge1xuICAgICAgaW5zZXRzOiB7XG4gICAgICAgIHRvcDogRG91YmxlO1xuICAgICAgICByaWdodDogRG91YmxlO1xuICAgICAgICBib3R0b206IERvdWJsZTtcbiAgICAgICAgbGVmdDogRG91YmxlO1xuICAgICAgfTtcbiAgICAgIGZyYW1lOiB7XG4gICAgICAgIHg6IERvdWJsZTtcbiAgICAgICAgeTogRG91YmxlO1xuICAgICAgICB3aWR0aDogRG91YmxlO1xuICAgICAgICBoZWlnaHQ6IERvdWJsZTtcbiAgICAgIH07XG4gICAgfTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXQ8U3BlYz4oJ1JOQ1NhZmVBcmVhQ29udGV4dCcpO1xuIl19