306ce13c906304a0894019835dec0312
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.List = void 0;
var _reactNative = require("react-native");
var _react = _interopRequireDefault(require("react"));
var _moment = _interopRequireDefault(require("moment"));
var _reactRedux = require("react-redux");
var _checkbox = _interopRequireDefault(require("@react-native-community/checkbox"));
var _jsxRuntime = require("react/jsx-runtime");
var List = function List(props) {
  var dataList = (0, _reactRedux.useSelector)(function (state) {
    return state.dataList;
  });
  var _onPressItem = function onPressItem(item) {
    props.navigation.navigate('Detail', {
      item: item,
      screen: 'Edit Item'
    });
  };
  var renderItem = function renderItem(_ref) {
    var item = _ref.item,
      index = _ref.index;
    return (0, _jsxRuntime.jsx)(Item, {
      testID: "item",
      CheckBox: item == null ? void 0 : item.check,
      title: item == null ? void 0 : item.title,
      description: item == null ? void 0 : item.description,
      date: (0, _moment.default)(item == null ? void 0 : item.date).format('LLLL'),
      onPressItem: function onPressItem() {
        return _onPressItem(item);
      }
    });
  };
  return (0, _jsxRuntime.jsx)(_reactNative.FlatList, {
    data: dataList,
    renderItem: renderItem,
    keyExtractor: function keyExtractor(item) {
      return item.id;
    }
  });
};
exports.List = List;
var Item = function Item(props) {
  return (0, _jsxRuntime.jsxs)(_reactNative.View, {
    style: styles.itemContainer,
    testID: props.testID,
    children: [(0, _jsxRuntime.jsx)(_reactNative.View, {
      style: styles.checkBox,
      children: (0, _jsxRuntime.jsx)(_checkbox.default, {
        disabled: false,
        value: props.CheckBox,
        onValueChange: props.onValueChange
      })
    }), (0, _jsxRuntime.jsxs)(_reactNative.TouchableOpacity, {
      onPress: function onPress() {
        return props.onPressItem(props.item);
      },
      style: {
        flex: 5,
        justifyContent: 'center'
      },
      children: [(0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.textTitle,
        children: props.title
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.description
      }), (0, _jsxRuntime.jsx)(_reactNative.Text, {
        style: styles.text1,
        children: props.date
      })]
    })]
  });
};
var styles = _reactNative.StyleSheet.create({
  text1: {
    fontSize: 12,
    fontWeight: '500',
    color: 'grey'
  },
  textTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: 'black'
  },
  itemContainer: {
    height: 80,
    width: '100%',
    flexDirection: 'row',
    marginBottom: 5
  },
  checkBox: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMaXN0IiwicHJvcHMiLCJkYXRhTGlzdCIsInVzZVNlbGVjdG9yIiwic3RhdGUiLCJvblByZXNzSXRlbSIsIml0ZW0iLCJuYXZpZ2F0aW9uIiwibmF2aWdhdGUiLCJzY3JlZW4iLCJyZW5kZXJJdGVtIiwiaW5kZXgiLCJjaGVjayIsInRpdGxlIiwiZGVzY3JpcHRpb24iLCJtb21lbnQiLCJkYXRlIiwiZm9ybWF0IiwiaWQiLCJJdGVtIiwic3R5bGVzIiwiaXRlbUNvbnRhaW5lciIsInRlc3RJRCIsImNoZWNrQm94IiwiQ2hlY2tCb3giLCJvblZhbHVlQ2hhbmdlIiwiZmxleCIsImp1c3RpZnlDb250ZW50IiwidGV4dFRpdGxlIiwidGV4dDEiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiZm9udFNpemUiLCJmb250V2VpZ2h0IiwiY29sb3IiLCJoZWlnaHQiLCJ3aWR0aCIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5Cb3R0b20iLCJhbGlnbkl0ZW1zIl0sInNvdXJjZXMiOlsiTGlzdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0eWxlU2hlZXQsIFRleHQsIFZpZXcsIFRvdWNoYWJsZU9wYWNpdHksIEZsYXRMaXN0fSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0Jztcbi8vIGltcG9ydCB7SXRlbX0gZnJvbSAnLi4vaXRlbS9JdGVtJztcbmltcG9ydCBtb21lbnQgZnJvbSAnbW9tZW50JztcbmltcG9ydCB7dXNlU2VsZWN0b3J9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBDaGVja0JveCBmcm9tICdAcmVhY3QtbmF0aXZlLWNvbW11bml0eS9jaGVja2JveCc7XG5cbmV4cG9ydCBjb25zdCBMaXN0ID0gcHJvcHMgPT4ge1xuICBjb25zdCBkYXRhTGlzdCA9IHVzZVNlbGVjdG9yKHN0YXRlID0+IHN0YXRlLmRhdGFMaXN0KTtcblxuICBjb25zdCBvblByZXNzSXRlbSA9IGl0ZW0gPT4ge1xuICAgIHByb3BzLm5hdmlnYXRpb24ubmF2aWdhdGUoJ0RldGFpbCcsIHtpdGVtOiBpdGVtLCBzY3JlZW46ICdFZGl0IEl0ZW0nfSk7XG4gIH07XG5cbiAgY29uc3QgcmVuZGVySXRlbSA9ICh7aXRlbSwgaW5kZXh9KSA9PiAoXG4gICAgPEl0ZW1cbiAgICAgIHRlc3RJRD1cIml0ZW1cIlxuICAgICAgQ2hlY2tCb3g9e2l0ZW0/LmNoZWNrfVxuICAgICAgdGl0bGU9e2l0ZW0/LnRpdGxlfVxuICAgICAgZGVzY3JpcHRpb249e2l0ZW0/LmRlc2NyaXB0aW9ufVxuICAgICAgZGF0ZT17bW9tZW50KGl0ZW0/LmRhdGUpLmZvcm1hdCgnTExMTCcpfVxuICAgICAgb25QcmVzc0l0ZW09eygpID0+IG9uUHJlc3NJdGVtKGl0ZW0pfVxuICAgIC8+XG4gICk7XG5cbiAgcmV0dXJuIChcbiAgICA8RmxhdExpc3RcbiAgICAgIGRhdGE9e2RhdGFMaXN0fVxuICAgICAgcmVuZGVySXRlbT17cmVuZGVySXRlbX1cbiAgICAgIGtleUV4dHJhY3Rvcj17aXRlbSA9PiBpdGVtLmlkfVxuICAgIC8+XG4gICk7XG59O1xuXG5jb25zdCBJdGVtID0gcHJvcHMgPT4gKFxuICA8VmlldyBzdHlsZT17c3R5bGVzLml0ZW1Db250YWluZXJ9IHRlc3RJRD17cHJvcHMudGVzdElEfT5cbiAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNoZWNrQm94fT5cbiAgICAgIDxDaGVja0JveFxuICAgICAgICBkaXNhYmxlZD17ZmFsc2V9XG4gICAgICAgIHZhbHVlPXtwcm9wcy5DaGVja0JveH1cbiAgICAgICAgb25WYWx1ZUNoYW5nZT17cHJvcHMub25WYWx1ZUNoYW5nZX1cbiAgICAgIC8+XG4gICAgPC9WaWV3PlxuXG4gICAgPFRvdWNoYWJsZU9wYWNpdHlcbiAgICAgIG9uUHJlc3M9eygpID0+IHByb3BzLm9uUHJlc3NJdGVtKHByb3BzLml0ZW0pfVxuICAgICAgc3R5bGU9e3tmbGV4OiA1LCBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcid9fT5cbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dFRpdGxlfT57cHJvcHMudGl0bGV9PC9UZXh0PlxuICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy50ZXh0MX0+e3Byb3BzLmRlc2NyaXB0aW9ufTwvVGV4dD5cbiAgICAgIDxUZXh0IHN0eWxlPXtzdHlsZXMudGV4dDF9Pntwcm9wcy5kYXRlfTwvVGV4dD5cbiAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG4gIDwvVmlldz5cbik7XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgdGV4dDE6IHtcbiAgICBmb250U2l6ZTogMTIsXG4gICAgZm9udFdlaWdodDogJzUwMCcsXG4gICAgY29sb3I6ICdncmV5JyxcbiAgfSxcbiAgdGV4dFRpdGxlOiB7XG4gICAgZm9udFNpemU6IDE2LFxuICAgIGZvbnRXZWlnaHQ6ICdib2xkJyxcbiAgICBjb2xvcjogJ2JsYWNrJyxcbiAgfSxcbiAgaXRlbUNvbnRhaW5lcjoge1xuICAgIGhlaWdodDogODAsXG4gICAgd2lkdGg6ICcxMDAlJyxcbiAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICBtYXJnaW5Cb3R0b206IDUsXG4gIH0sXG4gIGNoZWNrQm94OiB7XG4gICAgZmxleDogMSxcbiAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gIH0sXG59KTtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQXdEO0FBRWpELElBQU1BLElBQUksR0FBRyxTQUFQQSxJQUFJLENBQUdDLEtBQUssRUFBSTtFQUMzQixJQUFNQyxRQUFRLEdBQUcsSUFBQUMsdUJBQVcsRUFBQyxVQUFBQyxLQUFLO0lBQUEsT0FBSUEsS0FBSyxDQUFDRixRQUFRO0VBQUEsRUFBQztFQUVyRCxJQUFNRyxZQUFXLEdBQUcsU0FBZEEsV0FBVyxDQUFHQyxJQUFJLEVBQUk7SUFDMUJMLEtBQUssQ0FBQ00sVUFBVSxDQUFDQyxRQUFRLENBQUMsUUFB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