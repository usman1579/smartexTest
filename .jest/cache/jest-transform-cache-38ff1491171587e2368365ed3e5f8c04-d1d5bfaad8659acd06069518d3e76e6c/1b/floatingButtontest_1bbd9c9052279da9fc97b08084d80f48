00ca80cc0eb251c490ba41814843a01f
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
require("react-native");
var _react = _interopRequireDefault(require("react"));
var _reactNative2 = require("@testing-library/react-native");
var _FloatingButton = _interopRequireDefault(require("../FloatingButton"));
var _enzyme = require("enzyme");
var _jsxRuntime = require("react/jsx-runtime");
describe('Floating Button', function () {
  it('renders correctly on Detail Screen', function () {
    var _render = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_FloatingButton.default, {})),
      getByText = _render.getByText,
      getByTestId = _render.getByTestId;
    expect(getByTestId('add')).toBeTruthy();
  });
  it('calls onPress prop when menu icon is pressed', function () {
    var onPress = jest.fn();
    var _render2 = (0, _reactNative2.render)((0, _jsxRuntime.jsx)(_FloatingButton.default, Object.assign({}, props, {
        onPress: onPress
      }))),
      getByTestId = _render2.getByTestId;
    _reactNative2.fireEvent.press(getByTestId('add'));
    expect(onPress).toHaveBeenCalled();
    expect(props.navigation.navigate).toHaveBeenCalledWith('Detail', {
      item: data,
      screen: 'Add Item'
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJkZXNjcmliZSIsIml0IiwicmVuZGVyIiwiZ2V0QnlUZXh0IiwiZ2V0QnlUZXN0SWQiLCJleHBlY3QiLCJ0b0JlVHJ1dGh5Iiwib25QcmVzcyIsImplc3QiLCJmbiIsInByb3BzIiwiZmlyZUV2ZW50IiwicHJlc3MiLCJ0b0hhdmVCZWVuQ2FsbGVkIiwibmF2aWdhdGlvbiIsIm5hdmlnYXRlIiwidG9IYXZlQmVlbkNhbGxlZFdpdGgiLCJpdGVtIiwiZGF0YSIsInNjcmVlbiJdLCJzb3VyY2VzIjpbImZsb2F0aW5nQnV0dG9uLnRlc3QuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWFjdC1uYXRpdmUnO1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7cmVuZGVyLCBzY3JlZW4sIGZpcmVFdmVudH0gZnJvbSAnQHRlc3RpbmctbGlicmFyeS9yZWFjdC1uYXRpdmUnO1xuaW1wb3J0IEZsb2F0aW5nQnV0dG9uIGZyb20gJy4uL0Zsb2F0aW5nQnV0dG9uJztcbmltcG9ydCB7IHNoYWxsb3cgfSBmcm9tICdlbnp5bWUnO1xuXG5kZXNjcmliZSgnRmxvYXRpbmcgQnV0dG9uJywgKCkgPT4ge1xuXG4gICAgaXQoJ3JlbmRlcnMgY29ycmVjdGx5IG9uIERldGFpbCBTY3JlZW4nLCAoKSA9PiB7XG4gICAgICBjb25zdCB7Z2V0QnlUZXh0LCBnZXRCeVRlc3RJZH0gPSByZW5kZXIoPEZsb2F0aW5nQnV0dG9uICAvPik7XG4gICAgICBleHBlY3QoZ2V0QnlUZXN0SWQoJ2FkZCcpKS50b0JlVHJ1dGh5KCk7XG4gICAgfSk7XG5cbiAgICBpdCgnY2FsbHMgb25QcmVzcyBwcm9wIHdoZW4gbWVudSBpY29uIGlzIHByZXNzZWQnLCAoKSA9PiB7XG4gICAgICAgIGNvbnN0IG9uUHJlc3MgPSBqZXN0LmZuKCk7XG4gICAgICAgIGNvbnN0IHtnZXRCeVRlc3RJZH0gPSByZW5kZXIoPEZsb2F0aW5nQnV0dG9uICB7Li4ucHJvcHN9IG9uUHJlc3M9e29uUHJlc3N9IC8+KTtcbiAgICAgICAgZmlyZUV2ZW50LnByZXNzKGdldEJ5VGVzdElkKCdhZGQnKSk7XG4gICAgICAgIGV4cGVjdChvblByZXNzKS50b0hhdmVCZWVuQ2FsbGVkKCk7XG4gICAgICAgIGV4cGVjdChwcm9wcy5uYXZpZ2F0aW9uLm5hdmlnYXRlKS50b0hhdmVCZWVuQ2FsbGVkV2l0aCgnRGV0YWlsJywge2l0ZW06IGRhdGEgLCBzY3JlZW4gOidBZGQgSXRlbSd9KTtcbiAgICAgIH0pO1xuICBcblxuXG59KTtcblxuXG4vLyBkZXNjcmliZSgnRmxvYXRpbmdCdXR0b24nLCAoKSA9PiB7XG4vLyAgICAgbGV0IHdyYXBwZXIsIHByb3BzO1xuICBcbi8vICAgICBiZWZvcmVFYWNoKCgpID0+IHtcbi8vICAgICAgIC8vIFNldCB1cCBtb2NrIG5hdmlnYXRpb24ubmF2aWdhdGUgZnVuY3Rpb25cbi8vICAgICAgIHByb3BzID0ge1xuLy8gICAgICAgICBuYXZpZ2F0aW9uOiB7XG4vLyAgICAgICAgICAgbmF2aWdhdGU6IGplc3QuZm4oKVxuLy8gICAgICAgICB9XG4vLyAgICAgICB9O1xuICBcbi8vICAgICAgIC8vIFJlbmRlciB0aGUgY29tcG9uZW50XG4vLyAgICAgICB3cmFwcGVyID0gc2hhbGxvdyg8RmxvYXRpbmdCdXR0b24gey4uLnByb3BzfSAvPik7XG4vLyAgICAgfSk7XG4gIFxuLy8gICAgIGl0KCdzaG91bGQgY2FsbCBuYXZpZ2F0aW9uLm5hdmlnYXRlIHdpdGggY29ycmVjdCBhcmd1bWVudHMgd2hlbiBwcmVzc2VkJywgKCkgPT4ge1xuLy8gICAgICAgLy8gU2ltdWxhdGUgYnV0dG9uIHByZXNzXG4vLyAgICAgICB3cmFwcGVyLnNpbXVsYXRlKCdwcmVzcycpO1xuICBcbi8vICAgICAgIC8vIEFzc2VydCB0aGF0IG5hdmlnYXRpb24ubmF2aWdhdGUgd2FzIGNhbGxlZCB3aXRoIHRoZSBjb3JyZWN0IGFyZ3VtZW50c1xuLy8gICAgICAgZXhwZWN0KHByb3BzLm5hdmlnYXRpb24ubmF2aWdhdGUpLnRvSGF2ZUJlZW5DYWxsZWRXaXRoKCdEZXRhaWwnLCB7aXRlbTogZGF0YSAsIHNjcmVlbiA6J0FkZCBJdGVtJ30pO1xuLy8gICAgIH0pO1xuLy8gICB9KTtcbiJdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBaUM7QUFFakNBLFFBQVEsQ0FBQyxpQkFBaUIsRUFBRSxZQUFNO0VBRTlCQyxFQUFFLENBQUMsb0NBQW9DLEVBQUUsWUFBTTtJQUM3QyxjQUFpQyxJQUFBQyxvQkFBTSxFQUFDLHFCQUFDLHVCQUFjLEtBQUksQ0FBQztNQUFyREMsU0FBUyxXQUFUQSxTQUFTO01BQUVDLFdBQVcsV0FBWEEsV0FBVztJQUM3QkMsTUFBTSxDQUFDRCxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQ0UsVUFBVSxFQUFFO0VBQ3pDLENBQUMsQ0FBQztFQUVGTCxFQUFFLENBQUMsOENBQThDLEVBQUUsWUFBTTtJQUNyRCxJQUFNTSxPQUFPLEdBQUdDLElBQUksQ0FBQ0MsRUFBRSxFQUFFO0lBQ3pCLGVBQXNCLElBQUFQLG9CQUFNLEVBQUMscUJBQUMsdUJBQWMsb0JBQU1RLEtBQUs7UUFBRSxPQUFPLEVBQUVIO01BQVEsR0FBRyxDQUFDO01BQXZFSCxXQUFXLFlBQVhBLFdBQVc7SUFDbEJPLHVCQUFTLENBQUNDLEtBQUssQ0FBQ1IsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DQyxNQUFNLENBQUNFLE9BQU8sQ0FBQyxDQUFDTSxnQkFBZ0IsRUFBRTtJQUNsQ1IsTUFBTSxDQUFDSyxLQUFLLENBQUNJLFVBQVUsQ0FBQ0MsUUFBUSxDQUFDLENBQUNDLG9CQUFvQixDQUFDLFFBQVEsRUFBRTtNQUFDQyxJQUFJLEVBQUVDLElBQUk7TUFBR0MsTUFBTSxFQUFFO0lBQVUsQ0FBQyxDQUFDO0VBQ3JHLENBQUMsQ0FBQztBQUlSLENBQUMsQ0FBQyJ9